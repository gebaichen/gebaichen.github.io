import{_ as s,c as a,o as i,aS as n}from"./chunks/framework.Dbjoj8K5.js";const g=JSON.parse('{"title":"Flask实现登录","description":"Flask-login实现登录,登出等功能；Flask-Session 实现管理session,并把session储存到redis数据库","frontmatter":{"date":"2023.8.31","title":"Flask实现登录","tags":["flask","flask-sqlalchemy","flask-login","flask-session","python","web","flask插件"],"description":"Flask-login实现登录,登出等功能；Flask-Session 实现管理session,并把session储存到redis数据库","link":"/flask/flask-login.html"},"headers":[],"relativePath":"flask/flask-login.md","filePath":"flask/flask-login.md","lastUpdated":1700227085000}'),e={name:"flask/flask-login.md"},l=n(`<h1 id="flask实现登录" tabindex="-1">Flask实现登录 <a class="header-anchor" href="#flask实现登录" aria-label="Permalink to &quot;Flask实现登录&quot;">​</a></h1><h2 id="登录的方式" tabindex="-1">登录的方式 <a class="header-anchor" href="#登录的方式" aria-label="Permalink to &quot;登录的方式&quot;">​</a></h2><p>flask实现登录可以有两种方式， 这两种方式区分用‘前后端分离，半分离，不分离’</p><h3 id="第一种方式实现登录" tabindex="-1">第一种方式实现登录 <a class="header-anchor" href="#第一种方式实现登录" aria-label="Permalink to &quot;第一种方式实现登录&quot;">​</a></h3><p>利用session储存登录信息，并且把用户User orm对象传入<code>g.user方便使用</code></p><p>这一种session:是一种储存到服务器端的数据，需要秘钥进行加密，客户端浏览器无法访问 session加密存到cookie里面，cookie服务器端客户端都可以访问 。在客户端把带有session加密的cookie删除就退出登录</p><blockquote><p>注：这种适合前后端不分离或者半分离（部分分离）</p></blockquote><h3 id="第二种方式实现登录" tabindex="-1">第二种方式实现登录 <a class="header-anchor" href="#第二种方式实现登录" aria-label="Permalink to &quot;第二种方式实现登录&quot;">​</a></h3><p>第二种方式需要使用jwt-token，登录完成后服务器给客户端传入一个token( token的意思是“令牌”，是服务端生成的一串字符串，作为客户端进行请求的一个标识。)， (token都有时间限制，到了时间就不管用了)客户端请求需要携带这个token,如果没有就是没登录或权限不够，</p><p>一般服务器端登陆完返回的有两个token</p><ul><li>assets-token：服务器返回的token，用来请求其他页面携带的</li><li>refresh-token 刷新token：如果assets-token过期那么用刷新token去向服务器端请求assets-token 并进行使用</li></ul><blockquote><p>注：这种适合前后端分离</p></blockquote><h3 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h3><p>本篇文章，会讲解flask使用session来进行登录操作（更加常用）</p><h2 id="flask-login" tabindex="-1">Flask-Login <a class="header-anchor" href="#flask-login" aria-label="Permalink to &quot;Flask-Login&quot;">​</a></h2><p>这是一个flask专门做登录的一个库，他的底层是操作session来实现的</p><h3 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-QIj10" id="tab-fk6Rdyb" checked="checked"><label for="tab-fk6Rdyb">pip</label><input type="radio" name="group-QIj10" id="tab-QIvVOCa"><label for="tab-QIvVOCa">poetry</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install Flask-Login</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add Flask-Login</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h3 id="注册到app" tabindex="-1">注册到app <a class="header-anchor" href="#注册到app" aria-label="Permalink to &quot;注册到app&quot;">​</a></h3><p>注册app方式：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入flask_login 的LoginManager对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flask_login </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LoginManager </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建一个实例化对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">login_manager </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LoginManager()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注册到app</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">login_manager.init_app(app)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="自定义回调函数" tabindex="-1">自定义回调函数 <a class="header-anchor" href="#自定义回调函数" aria-label="Permalink to &quot;自定义回调函数&quot;">​</a></h4><p>一般我们操作登录的时候会使用User这个ORM对象 而flask_login默认提供了一个<code>current_user</code>对象，这个对象就是当前登录的UserORM对象</p><p>而我们要在配置里编写回调函数才能达到以上效果</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@login_manager.user_loader</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> load_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userid):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> User.query.get(userid)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这样我们就能使用current_user了</p><h4 id="验证失败回调" tabindex="-1">验证失败回调 <a class="header-anchor" href="#验证失败回调" aria-label="Permalink to &quot;验证失败回调&quot;">​</a></h4><p>login-view ：验证失败跳转的界面</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">login_manager.login_view </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;index&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 跳转到/首页目录</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这里面传入的内容就是函数名，或者可以自己定义（<code>app.add_url_rule(&#39;&lt;路由&gt;&#39;,&#39;&lt;名称（上文提到的）&gt;&#39;,&lt;函数&gt;)</code>）</p><p>如果注册到了蓝图里面那么</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">login_manager.login_view </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;蓝图名字&gt;.函数名（自定义的名称）&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h3><h4 id="login-required" tabindex="-1">login_required <a class="header-anchor" href="#login-required" aria-label="Permalink to &quot;login_required&quot;">​</a></h4><p>是一个装饰器用来检测是否登录的装饰器闭包函数</p><p>例如</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/admin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@login_required</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> admin_admin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="login-user" tabindex="-1">login_user <a class="header-anchor" href="#login-user" aria-label="Permalink to &quot;login_user&quot;">​</a></h4><p>是用来实现登录操作的<code>login_user(user)</code> 里面的参数是User的ORM对象</p><h4 id="logout-user" tabindex="-1">logout_user <a class="header-anchor" href="#logout-user" aria-label="Permalink to &quot;logout_user&quot;">​</a></h4><p>是实现退出登录操作的无参数</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/logout&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@login_required</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> logout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    logout_user()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Logged out successfully!&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="usermixin" tabindex="-1">UserMixin <a class="header-anchor" href="#usermixin" aria-label="Permalink to &quot;UserMixin&quot;">​</a></h3><p>UserMixin的属性：</p><table><thead><tr><th>名称</th><th>作用</th></tr></thead><tbody><tr><td>is_authenticated</td><td>当用户通过验证时，也即提供有效证明时返回 True 。（只有通过验证的用户会满足 login_required 的条件。）</td></tr><tr><td>is_active</td><td>如果这是一个活动用户且通过验证，账户也已激活，未被停用，也不符合任何你 的应用拒绝一个账号的条件，返回 True。不活动的账号可能不会登入（当然， 是在没被强制的情况下）。</td></tr><tr><td>is_anonymous</td><td>如果是一个匿名用户，返回 True 。（真实用户应返回 False 。）</td></tr><tr><td>get_id()</td><td>返回一个能唯一识别用户的，并能用于从 user_loader 回调中加载用户的 unicode 。注意着 必须 是一个unicode —— 如果 ID 原本是 一个 int 或其它类型，你需要把它转换为 unicode 。</td></tr></tbody></table><p>要简便地实现用户类，你可以从 UserMixin 继承，它提供了对所有这些方法的默认 实现。（虽然这不是必须的。）</p><h3 id="定义一个user" tabindex="-1">定义一个User <a class="header-anchor" href="#定义一个user" aria-label="Permalink to &quot;定义一个User&quot;">​</a></h3><p>这次定义User类需要继承<code>flask_login.UserMixin</code>这样才能正常登录退出，使用上文的属性</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flask_login </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UserMixin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UserMixin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    pass</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="flask-session" tabindex="-1">Flask-Session <a class="header-anchor" href="#flask-session" aria-label="Permalink to &quot;Flask-Session&quot;">​</a></h2><p>作用是可以来操纵session, 最突出的优点是可以把session储存到redis数据库，而且还可以设定过期时间 更好的体验感。</p><h3 id="下载-1" tabindex="-1">下载 <a class="header-anchor" href="#下载-1" aria-label="Permalink to &quot;下载&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-s9YOu" id="tab-JeoEnGr" checked="checked"><label for="tab-JeoEnGr">pip</label><input type="radio" name="group-s9YOu" id="tab-GxvAqRi"><label for="tab-GxvAqRi">poetry</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install Flask-Session</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add Flask-Session</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h3 id="注册到app-1" tabindex="-1">注册到app <a class="header-anchor" href="#注册到app-1" aria-label="Permalink to &quot;注册到app&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flask_session </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Session</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">session </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Session()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">session.init_app(app)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>基本上常用的配置都在下面， 做项目时可以直接复制过去</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Session保存配置</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SESSION_TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;redis&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启session签名</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SESSION_USE_SIGNER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定 Session 保存的 redis</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SESSION_REDIS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Redis(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置需要过期</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SESSION_PERMANENT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置过期时间</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PERMANENT_SESSION_LIFETIME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.timedelta(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">days</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,58),p=[l];function t(h,r,d,k,o,c){return i(),a("div",null,p)}const b=s(e,[["render",t]]);export{g as __pageData,b as default};
