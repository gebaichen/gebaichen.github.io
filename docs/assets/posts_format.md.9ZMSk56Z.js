import{_ as s,c as a,o as i,aS as e}from"./chunks/framework.Dbjoj8K5.js";const u=JSON.parse('{"title":"格式化Python代码并对提交进行检查","description":"格式化Python代码并对提交进行检查，有助于更好的多人开发","frontmatter":{"date":"2023.9.11","title":"格式化Python代码并对提交进行检查","tags":["python","black","isort","pre-commit","python代码规范"],"description":"格式化Python代码并对提交进行检查，有助于更好的多人开发"},"headers":[],"relativePath":"posts/format.md","filePath":"posts/format.md","lastUpdated":1706509474000}'),t={name:"posts/format.md"},l=e(`<h1 id="格式化代码并对提交进行检查" tabindex="-1">格式化代码并对提交进行检查 <a class="header-anchor" href="#格式化代码并对提交进行检查" aria-label="Permalink to &quot;格式化代码并对提交进行检查&quot;">​</a></h1><h2 id="为什么要用工具来格式化代码" tabindex="-1">为什么要用工具来格式化代码？ <a class="header-anchor" href="#为什么要用工具来格式化代码" aria-label="Permalink to &quot;为什么要用工具来格式化代码？&quot;">​</a></h2><p>在做项目中我们可能会遇到一个问题，这个问题就是，如果多人开发的时候，每个人的 代码风格也都不一样，如何统一，让每个人都看懂对方的代码？ 这个时候就需要格式化工具对代码进行格式化处理 并且如果你的代码放在gitee/github上代码很烂，是会被喷的， 还有如果那你自身代码写得并不规范可以使用格式化代码工具来，把代码进行格式化， 更加符合编程规范</p><h2 id="black" tabindex="-1">Black <a class="header-anchor" href="#black" aria-label="Permalink to &quot;Black&quot;">​</a></h2><h3 id="black介绍" tabindex="-1">black介绍 <a class="header-anchor" href="#black介绍" aria-label="Permalink to &quot;black介绍&quot;">​</a></h3><p>使用 Python 这么久以来，我尝过不少的代码格式化工具，但是因为配置麻烦最终都放弃了。直到遇见了 black 。这个工具实现了零配置将所有的代码格式统一，并且可以配置到 pre-commit ， 在用 Git 进行提交之前进行校验，这样就可以非常轻松的实现项目所有代码风格完全统一。</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-F6_Fh" id="tab-toQd9ss" checked="checked"><label for="tab-toQd9ss">pip</label><input type="radio" name="group-F6_Fh" id="tab-RIAVkq9"><label for="tab-RIAVkq9">poetry</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install black</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add black</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h3 id="简单使用" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用" aria-label="Permalink to &quot;简单使用&quot;">​</a></h3><p>1、作为脚本运行</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">black</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {source_file_or_directory}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># black {文件或者目录}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>2、如果将 Black 作为脚本运行不起作用，您可以尝试将其作为包运行：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> black {source_file_or_directory}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3、如果想要将当前目录下所有文件格式化，也可以使用 black .</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">black</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="isort" tabindex="-1">Isort <a class="header-anchor" href="#isort" aria-label="Permalink to &quot;Isort&quot;">​</a></h2><p>isort 是一个实用的 Python 程序/库，用于按照字母表顺序对 imports 进行排序，并自动按类型（标准库/第三方库/自己的模块/……）划分部分。它为各种编辑器提供了命令行程序、Python 库和插件，以快速对所有导入进行排序。</p><h3 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-2L51x" id="tab-2Gjslhm" checked="checked"><label for="tab-2Gjslhm">pip</label><input type="radio" name="group-2L51x" id="tab-J-Knq_0"><label for="tab-J-Knq_0">poetry</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install isort</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add isort</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果您希望 isort 作为项目的 linter，则可能需要为每个使用它的项目添加 isort 作为显示开发依赖项。另一方面，如果您是个人开发人员，只是使用 isort 作为个人工具来清理您自己的 commit ，那么全局或用户级别的安装是有意义的。两者都在一台机器上无缝支持。 简单使</p></div><h3 id="简单使用-1" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用-1" aria-label="Permalink to &quot;简单使用&quot;">​</a></h3><p>1、命令行使用</p><p>在特定文件上运行：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isort</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mypythonfile.py mypythonfile2.py</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2、递归地使用：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isort</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3、在 Python 内使用</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isort</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">isort.file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pythonfile.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="pre-commit" tabindex="-1">pre-commit <a class="header-anchor" href="#pre-commit" aria-label="Permalink to &quot;pre-commit&quot;">​</a></h2><blockquote><p><a href="https://pre-commit.com/" target="_blank" rel="noreferrer">https://pre-commit.com/</a></p></blockquote><h3 id="安装-2" tabindex="-1">安装 <a class="header-anchor" href="#安装-2" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-SSiVE" id="tab-d5S7bCj" checked="checked"><label for="tab-d5S7bCj">pip</label><input type="radio" name="group-SSiVE" id="tab-AnQ3dEW"><label for="tab-AnQ3dEW">poetry</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install pre-commit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add pre-commit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h3 id="添加配置" tabindex="-1">添加配置 <a class="header-anchor" href="#添加配置" aria-label="Permalink to &quot;添加配置&quot;">​</a></h3><p>创建<code>.pre-commit-config.yaml</code>文件</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-YO5Tl" id="tab-d9B2FtI" checked="checked"><label for="tab-d9B2FtI">.pre-commit-config.yaml</label></div><div class="blocks"><div class="language-yaml vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># See https://pre-commit.com for more information</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># See https://pre-commit.com/hooks.html for more hooks</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">repos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">repo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://github.com/pycqa/isort</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    rev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.12.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">isort</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--profile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--filter-files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">repo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://github.com/psf/black</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    rev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">23.9.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">black</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div></div><h3 id="安装钩子" tabindex="-1">安装钩子 <a class="header-anchor" href="#安装钩子" aria-label="Permalink to &quot;安装钩子&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pre-commit install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pre-commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> installed at .git/hooks/pre-commit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>安装 git hook 之后，当在运行 pre-commit 提交时，将自动校验 pre-commit 的规则。</p><h2 id="使用commitizen校验提交" tabindex="-1">使用commitizen校验提交 <a class="header-anchor" href="#使用commitizen校验提交" aria-label="Permalink to &quot;使用commitizen校验提交&quot;">​</a></h2><h3 id="安装-3" tabindex="-1">安装 <a class="header-anchor" href="#安装-3" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-2-Pxi" id="tab-M4gGHlB" checked="checked"><label for="tab-M4gGHlB">pip</label><input type="radio" name="group-2-Pxi" id="tab-7Ks1I26"><label for="tab-7Ks1I26">poetry</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install commitizen</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add commitizen</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h3 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 出现选择配置文件时选择默认的就好</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="使用提交代码" tabindex="-1">使用提交代码 <a class="header-anchor" href="#使用提交代码" aria-label="Permalink to &quot;使用提交代码&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-label="Permalink to &quot;类型&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">操作</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">feat</td><td style="text-align:left;">新功能（A new feature)</td></tr><tr><td style="text-align:left;">fix</td><td style="text-align:left;">修复bug (A bug fix)</td></tr><tr><td style="text-align:left;">improvement</td><td style="text-align:left;">对当前功能的改进（An improvement to a current feature)</td></tr><tr><td style="text-align:left;">docs</td><td style="text-align:left;">仅包含文档的修改（Documentation only changes)</td></tr><tr><td style="text-align:left;">style</td><td style="text-align:left;">格式化变动，不影响代码逻辑。比如清除多余空白，删除分号 等</td></tr><tr><td style="text-align:left;">refactor</td><td style="text-align:left;">重构，即不是新增功能，也不是修改bug的代码变动</td></tr><tr><td style="text-align:left;">perf</td><td style="text-align:left;">提高性能的修改（A code change that improves performance)</td></tr><tr><td style="text-align:left;">test</td><td style="text-align:left;">添加或修改测试代码(Adding missing tests or correcting existing tests)</td></tr><tr><td style="text-align:left;">bui1d</td><td style="text-align:left;">构建工具或外部依赖包的修改。比如更新依赖包的版本等 ( Changes that affect the bui1d system or externa1</td></tr><tr><td style="text-align:left;">dependencies)</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">ci</td><td style="text-align:left;">持续集成的配置文件或脚本的修改（ changes to our cI configuration files and scripts)</td></tr><tr><td style="text-align:left;">chore</td><td style="text-align:left;">杂项。其它不修改源代码与测试代码的修改( other changes that don&#39;t modify src or test files)</td></tr><tr><td style="text-align:left;">revert</td><td style="text-align:left;">撤销某次提交( Reverts aprevious commit)</td></tr></tbody></table>`,47),n=[l];function p(r,h,d,o,c,k){return i(),a("div",null,n)}const g=s(t,[["render",p]]);export{u as __pageData,g as default};
