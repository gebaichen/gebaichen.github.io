import{_ as l,o as p,c as o,k as e,a as s,t,Q as a}from"./chunks/framework.b6PMUn9J.js";const g=JSON.parse('{"title":"2023上半年总结","description":"总结上半年接触到的技术和感受","frontmatter":{"date":"2023.8.20","title":"2023上半年总结","tags":["总结"],"description":"总结上半年接触到的技术和感受","link":"/posts/first-half-2023-summarize.html"},"headers":[],"relativePath":"posts/first-half-2023-summarize.md","filePath":"posts/first-half-2023-summarize.md","lastUpdated":1700227085000}'),r={name:"posts/first-half-2023-summarize.md"},c={id:"frontmatter-title",tabindex:"-1"},i=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),d=a(`<p>总结上半年接触到的技术和感受</p><h2 id="接触的技术" tabindex="-1">接触的技术 <a class="header-anchor" href="#接触的技术" aria-label="Permalink to &quot;接触的技术&quot;">​</a></h2><h3 id="前端" tabindex="-1">前端 <a class="header-anchor" href="#前端" aria-label="Permalink to &quot;前端&quot;">​</a></h3><p>前端，我尝试了很多东西：</p><p><code>layui</code>,<code>bootstrap</code>,<code>jquery</code></p><p><code>vue</code>,<code>vite</code>,<code>pinia</code>,<code>vue-router</code>,<code>elements-plus</code>、<code>vitepress</code>,<code>vuepress</code></p><p>这些工具的使用，让我感到技术那是更新的真快，19年时我刚接触编程，当时vue还是vue2的版本 这几年我也是看到了技术的更新迭代，只能不停的自学😭。</p><h3 id="后端" tabindex="-1">后端 <a class="header-anchor" href="#后端" aria-label="Permalink to &quot;后端&quot;">​</a></h3><p>后端我主要是学习了flask</p><h4 id="flask-sqlalchemy" tabindex="-1">flask-sqlalchemy <a class="header-anchor" href="#flask-sqlalchemy" aria-label="Permalink to &quot;flask-sqlalchemy&quot;">​</a></h4><p>今年flask-sqlalchemy更新，更新了新的查询方法</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">q </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> db.select(UserModel)</span></span>
<span class="line"><span style="color:#E1E4E8;">q </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> q.filter(</span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">users </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> db.session.execute(q)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">q </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> db.select(UserModel)</span></span>
<span class="line"><span style="color:#24292E;">q </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> q.filter(</span><span style="color:#005CC5;">...</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">users </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> db.session.execute(q)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这种方式写起来很爽，也很易懂</p><h4 id="flask-limiter" tabindex="-1">flask-limiter <a class="header-anchor" href="#flask-limiter" aria-label="Permalink to &quot;flask-limiter&quot;">​</a></h4><blockquote><p><a href="https://flask-limiter.readthedocs.io/en/stable/">https://flask-limiter.readthedocs.io/en/stable/</a></p></blockquote>`,15),h=e("a",{href:"/flask/flask-limiter.html"},"文章",-1),y=a(`<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask_limiter </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Limiter</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask_limiter.util </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> get_remote_address</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">limiter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Limiter(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">key_func</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">get_remote_address,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 每天200次，一小时50次</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">default_limits</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;4800 per day&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;200 per hour&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;50 per minute&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;5 per second&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">storage_uri</span><span style="color:#F97583;">=</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;redis:redis_password//@redis_host:redis_port/1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">register_limiter</span><span style="color:#E1E4E8;">(app: Flask):</span></span>
<span class="line"><span style="color:#E1E4E8;">    limiter.init_app(app)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask_limiter </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Limiter</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask_limiter.util </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> get_remote_address</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">limiter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Limiter(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">key_func</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">get_remote_address,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 每天200次，一小时50次</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">default_limits</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;4800 per day&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;200 per hour&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;50 per minute&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;5 per second&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">storage_uri</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;redis:redis_password//@redis_host:redis_port/1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">register_limiter</span><span style="color:#24292E;">(app: Flask):</span></span>
<span class="line"><span style="color:#24292E;">    limiter.init_app(app)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>香死我了！！！！！！</p><h4 id="flask-assets" tabindex="-1">flask-assets <a class="header-anchor" href="#flask-assets" aria-label="Permalink to &quot;flask-assets&quot;">​</a></h4><blockquote><p><a href="https://flask-assets.readthedocs.io/en/latest/">https://flask-assets.readthedocs.io/en/latest/</a></p></blockquote><p>flask-assets 实现对 JavaScript、css 文件打包、压缩 就是因为这个特性，吸引了我。</p><p>在访问网站应用程序的时候，浏览器会加载 html 之后再下载很多的 CSS/JS 文件，发送很多的请求。虽然现在浏览器支持并行下载，但也是有限制的，所以这也成为了网页加载速度的一个瓶颈。</p><p>flask-assets 可以将多个 css/js 文件合并为一个文件，并且将其删除空白符、换行符、压缩，使其体积变小（将近30%）。并且 flask-assets 还会使用特定的 HTTP Response Header 能够让浏览器缓存这些文件，只有这些文件被修改时才会再次下载，提高程序的性能。</p><h4 id="pre-commit" tabindex="-1">pre-commit <a class="header-anchor" href="#pre-commit" aria-label="Permalink to &quot;pre-commit&quot;">​</a></h4><blockquote><p><a href="https://pre-commit.com/">https://pre-commit.com/</a></p></blockquote><p>使用 pre-commit 对 Python 代码校验</p><p>还有black,isort格式化代码</p><h4 id="poetry" tabindex="-1">poetry <a class="header-anchor" href="#poetry" aria-label="Permalink to &quot;poetry&quot;">​</a></h4><blockquote><p><a href="https://python-poetry.org/">https://python-poetry.org/</a></p></blockquote>`,13),u=a('<p>1.管理第三方模块的安装与卸载</p><p>2.管理虚拟环境</p><p>3.管理虚拟环境的依赖</p><p>4.管理打包与发布</p><p>5.虚拟环境的依赖</p><h2 id="我的项目" tabindex="-1">我的项目 <a class="header-anchor" href="#我的项目" aria-label="Permalink to &quot;我的项目&quot;">​</a></h2><h3 id="个人项目-曲奇论坛" tabindex="-1">个人项目-曲奇论坛 <a class="header-anchor" href="#个人项目-曲奇论坛" aria-label="Permalink to &quot;个人项目-曲奇论坛&quot;">​</a></h3><p>耗费了我几乎两年时间的曲奇论坛，里面的技术也不是最新的，要改那是个大工程，所以我决定不改了。 这个项目绝对是我做的最好的一个项目</p><h3 id="个人项目-学生信息分数管理系统" tabindex="-1">个人项目-学生信息分数管理系统 <a class="header-anchor" href="#个人项目-学生信息分数管理系统" aria-label="Permalink to &quot;个人项目-学生信息分数管理系统&quot;">​</a></h3><blockquote><p><a href="https://gitee.com/ge-baichen_admin/quqistu.git">https://gitee.com/ge-baichen_admin/quqistu.git</a></p></blockquote>',10),m=a('<a href="https://gitee.com/ge-baichen_admin/quqistu/blob/master/readme.md">介绍</a><h3 id="个人博客文档网站" tabindex="-1">个人博客文档网站 <a class="header-anchor" href="#个人博客文档网站" aria-label="Permalink to &quot;个人博客文档网站&quot;">​</a></h3><blockquote><p> 就是<a href="/">本站</a></p></blockquote><p>有一天在github看到了<a href="https://github.com/airene/vitepress-blog-pure" target="_blank" rel="noreferrer">https://github.com/airene/vitepress-blog-pure</a> 这个项目， 我也想做一个这样的，我就开始自己琢磨<a href="https://vitepress.dev/">vitepress</a><br> 感觉这个还挺好用的，就建了本站</p><h2 id="感受" tabindex="-1">感受 <a class="header-anchor" href="#感受" aria-label="Permalink to &quot;感受&quot;">​</a></h2><p>这下半年也要过去了，我感觉就是时间真快，要学的内容越来越多，就一个vue的生态就不少。</p><p>这其实让我想起了一句话<code>&quot;程序员的能力与他写过的代码是正比的。&quot;</code>,还是要努力尽力迎接下一年的到来</p>',7);function E(n,b,_,f,q,k){return p(),o("div",null,[e("h1",c,[s(t(n.$frontmatter.title)+" ",1),i]),d,s(" 今年年初我偶然发现了一个特别好的宝藏插件，他可以控制访问频率 我立马加入到了我的项目中 我也会在本站加"),h,s("来介绍用法 "),y,s(" 作为新发现的包管理器，差不多是 pip + venv，的结合体。可以类似 pip 用于管理第三方模块的管理，但是比 pip 的功能强大许多，同时还包含 venv 的虚拟环境管理功能。大致的功能： "),u,s(" 他是基于角色用户管理系统（rabc）做的,"),m])}const v=l(r,[["render",E]]);export{g as __pageData,v as default};
