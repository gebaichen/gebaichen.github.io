import{_ as s,o as a,c as e,Q as l}from"./chunks/framework.b6PMUn9J.js";const u=JSON.parse('{"title":"格式化Python代码并对提交进行检查","description":"格式化Python代码并对提交进行检查，有助于更好的多人开发","frontmatter":{"date":"2023.9.11","title":"格式化Python代码并对提交进行检查","tags":["python","black","isort","pre-commit","python代码规范"],"description":"格式化Python代码并对提交进行检查，有助于更好的多人开发"},"headers":[],"relativePath":"posts/format.md","filePath":"posts/format.md","lastUpdated":1700227085000}'),n={name:"posts/format.md"},p=l(`<h1 id="格式化代码并对提交进行检查" tabindex="-1">格式化代码并对提交进行检查 <a class="header-anchor" href="#格式化代码并对提交进行检查" aria-label="Permalink to &quot;格式化代码并对提交进行检查&quot;">​</a></h1><h2 id="为什么要用工具来格式化代码" tabindex="-1">为什么要用工具来格式化代码？ <a class="header-anchor" href="#为什么要用工具来格式化代码" aria-label="Permalink to &quot;为什么要用工具来格式化代码？&quot;">​</a></h2><p>在做项目中我们可能会遇到一个问题，这个问题就是，如果多人开发的时候，每个人的 代码风格也都不一样，如何统一，让每个人都看懂对方的代码？ 这个时候就需要格式化工具对代码进行格式化处理 并且如果你的代码放在gitee/github上代码很烂，是会被喷的， 还有如果那你自身代码写得并不规范可以使用格式化代码工具来，把代码进行格式化， 更加符合编程规范</p><h2 id="black" tabindex="-1">Black <a class="header-anchor" href="#black" aria-label="Permalink to &quot;Black&quot;">​</a></h2><h3 id="black介绍" tabindex="-1">black介绍 <a class="header-anchor" href="#black介绍" aria-label="Permalink to &quot;black介绍&quot;">​</a></h3><p>使用 Python 这么久以来，我尝过不少的代码格式化工具，但是因为配置麻烦最终都放弃了。直到遇见了 black 。这个工具实现了零配置将所有的代码格式统一，并且可以配置到 pre-commit ， 在用 Git 进行提交之前进行校验，这样就可以非常轻松的实现项目所有代码风格完全统一。</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-79YUI" id="tab-dECBfIl" checked="checked"><label for="tab-dECBfIl">pip</label><input type="radio" name="group-79YUI" id="tab-ig5q8Bm"><label for="tab-ig5q8Bm">poetry</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">black</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">black</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">poetry</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">black</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">poetry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">black</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h3 id="简单使用" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用" aria-label="Permalink to &quot;简单使用&quot;">​</a></h3><p>1、作为脚本运行</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">black</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{source_file_or_directory}</span></span>
<span class="line"><span style="color:#6A737D;"># black {文件或者目录}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">black</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{source_file_or_directory}</span></span>
<span class="line"><span style="color:#6A737D;"># black {文件或者目录}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>2、如果将 Black 作为脚本运行不起作用，您可以尝试将其作为包运行：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">python</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">black</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{source_file_or_directory}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">python</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">black</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{source_file_or_directory}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3、如果想要将当前目录下所有文件格式化，也可以使用 black .</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">black</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">black</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="isort" tabindex="-1">Isort <a class="header-anchor" href="#isort" aria-label="Permalink to &quot;Isort&quot;">​</a></h2><p>isort 是一个实用的 Python 程序/库，用于按照字母表顺序对 imports 进行排序，并自动按类型（标准库/第三方库/自己的模块/……）划分部分。它为各种编辑器提供了命令行程序、Python 库和插件，以快速对所有导入进行排序。</p><h3 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-KvtE4" id="tab-ryoF0Hx" checked="checked"><label for="tab-ryoF0Hx">pip</label><input type="radio" name="group-KvtE4" id="tab-It2HKfF"><label for="tab-It2HKfF">poetry</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">pip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">isort</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">pip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">isort</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">poetry</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">isort</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">poetry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">isort</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果您希望 isort 作为项目的 linter，则可能需要为每个使用它的项目添加 isort 作为显示开发依赖项。另一方面，如果您是个人开发人员，只是使用 isort 作为个人工具来清理您自己的 commit ，那么全局或用户级别的安装是有意义的。两者都在一台机器上无缝支持。 简单使</p></div><h3 id="简单使用-1" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用-1" aria-label="Permalink to &quot;简单使用&quot;">​</a></h3><p>1、命令行使用</p><p>在特定文件上运行：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">isort</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mypythonfile.py</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mypythonfile2.py</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">isort</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mypythonfile.py</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mypythonfile2.py</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2、递归地使用：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">isort</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">isort</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3、在 Python 内使用</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> isort</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">isort.file(</span><span style="color:#9ECBFF;">&quot;pythonfile.py&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> isort</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">isort.file(</span><span style="color:#032F62;">&quot;pythonfile.py&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="pre-commit" tabindex="-1">pre-commit <a class="header-anchor" href="#pre-commit" aria-label="Permalink to &quot;pre-commit&quot;">​</a></h2><blockquote><p><a href="https://blog.csdn.net/kiscon/article/details/115399290" target="_blank" rel="noreferrer">https://blog.csdn.net/kiscon/article/details/115399290</a></p></blockquote>`,30),o=[p];function t(r,c,i,d,h,y){return a(),e("div",null,o)}const m=s(n,[["render",t]]);export{u as __pageData,m as default};
