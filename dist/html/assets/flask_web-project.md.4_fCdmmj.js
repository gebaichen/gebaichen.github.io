import{_ as a,o as p,c as l,k as s,a as o,t as e,Q as c}from"./chunks/framework.b6PMUn9J.js";const g=JSON.parse('{"title":"Flask Web大型项目创建结构","description":"介绍了，如何Flask web大型项目创建结构","frontmatter":{"date":"2023.8.24","title":"Flask Web大型项目创建结构","tags":["python","web","flask"],"description":"介绍了，如何Flask web大型项目创建结构"},"headers":[],"relativePath":"flask/web-project.md","filePath":"flask/web-project.md","lastUpdated":1700227085000}'),r={name:"flask/web-project.md"},t={id:"frontmatter-title",tabindex:"-1"},y=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),E=c(`<h2 id="前端" tabindex="-1">前端 <a class="header-anchor" href="#前端" aria-label="Permalink to &quot;前端&quot;">​</a></h2><p>前端可以尝试用原生的，或者是MVVM框架的</p><ul><li><p>原生<code>layui</code>,<code>bootstrap</code>,<code>jquery</code></p></li><li><p>MVVM框架的<code>vue</code>,<code>vite</code>,<code>pinia</code>,<code>vue-router</code>,<code>elements-plus</code>、<code>vitepress</code>,<code>vuepress</code></p></li></ul><h2 id="后端" tabindex="-1">后端 <a class="header-anchor" href="#后端" aria-label="Permalink to &quot;后端&quot;">​</a></h2><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">---</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flaskproject</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 工程目录</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">app</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># app包</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------views</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__init__.py</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 启动文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passport</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 蓝图</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">---</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__init__.py</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 此处创建蓝图对象</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">---</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passport.py</span><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">---</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">profile.py</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">---</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">students</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 学生信息蓝图</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">---</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__init__.py</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">---</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">models</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__init__.py</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 启动文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">extensions</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__init__.py</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 启动文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">common</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">utils</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set_logs.py</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># log</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">api</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__init__.py</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passport</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apis.py</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__init__.py</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__init__.py</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 启动文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># log文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">log.log</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># log文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.gitkeep</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># git 站位文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 静态文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">templates</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 模板文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.env</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 秘钥</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.flaskenv</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># flask运行配置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.gitignore</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># git不提交内容列表</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flask_config.py</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># flask配置内容</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">command.py</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># flask 自定义命令</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">---</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flaskproject</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 工程目录</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">app</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># app包</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------views</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__init__.py</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 启动文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passport</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 蓝图</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">---</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__init__.py</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 此处创建蓝图对象</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">---</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passport.py</span><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">---</span><span style="color:#24292E;"> </span><span style="color:#032F62;">profile.py</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">---</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">students</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 学生信息蓝图</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">---</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__init__.py</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">---</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">models</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__init__.py</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 启动文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">extensions</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__init__.py</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 启动文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">common</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">utils</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set_logs.py</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># log</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">api</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__init__.py</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passport</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apis.py</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__init__.py</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__init__.py</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 启动文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">logs</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># log文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">log.log</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># log文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.gitkeep</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># git 站位文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">static</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 静态文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">templates</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 模板文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.env</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 秘钥</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.flaskenv</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># flask运行配置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.gitignore</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># git不提交内容列表</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flask_config.py</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># flask配置内容</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">command.py</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># flask 自定义命令</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="使用-git-管理源代码" tabindex="-1">使用 GIT 管理源代码 <a class="header-anchor" href="#使用-git-管理源代码" aria-label="Permalink to &quot;使用 GIT 管理源代码&quot;">​</a></h3><p>初始化 git</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ cd [项目目录]</span></span>
<span class="line"><span style="color:#e1e4e8;">$ git init</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ cd [项目目录]</span></span>
<span class="line"><span style="color:#24292e;">$ git init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>配置当前项目git提交信息(可省略此步，如不配置则使用全局配置)</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">XXX</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.email</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">XXX@xxx.com</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">XXX</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.email</span><span style="color:#24292E;"> </span><span style="color:#032F62;">XXX@xxx.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>添加忽略文件</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">touch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.gitignore</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">touch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.gitignore</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>设置忽略文件内容(后续根据需要再添加)</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.idea</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">.py[cod]</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">.log</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.idea</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">.py[cod]</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">.log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>添加所有文件到暂存区</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>提交到本地仓库并填写注释</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;init&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;init&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>让 Pycharm 管理当前项目的 git</p><h3 id="创建虚拟环境" tabindex="-1">创建虚拟环境 <a class="header-anchor" href="#创建虚拟环境" aria-label="Permalink to &quot;创建虚拟环境&quot;">​</a></h3><blockquote><p>建议使用<a href="https://python-poetry.org/" target="_blank" rel="noreferrer">poetry</a></p></blockquote><h3 id="项目基本配置" tabindex="-1">项目基本配置 <a class="header-anchor" href="#项目基本配置" aria-label="Permalink to &quot;项目基本配置&quot;">​</a></h3><h4 id="使用类组织配置文件" tabindex="-1">使用类组织配置文件 <a class="header-anchor" href="#使用类组织配置文件" aria-label="Permalink to &quot;使用类组织配置文件&quot;">​</a></h4><p>在实际需求中，往往需要不同的配置组合。</p><p>例如，开发用的配置，测试用的配置，生产环境用的配置。为了能方便地在这些配置中切换，可以把配置文件升级为包，然后为这些使用场景分别创建不同的配置文件，但是最方便的做法是在单个配置文件中使用 Python 类来组织多个不同类别的配置。</p><p>现在它包含一个基本配置类（BaseConfig），还有其他特定的配置类，即测试配置类（TestingConfig）、开发配置类（DevelopmentConfig）和生产配置类（ProductionConfig），这些特定配置类都继承自基本配置类。</p><blockquote><p>configs.py：使用 Python 类组织配置</p></blockquote><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename:flask_configs.py</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> datetime</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> logging</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> dotenv </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> load_dotenv</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> quqi.extensions </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> redis_store</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">basedir </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.path.abspath(os.path.dirname(</span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">dot_env_path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.path.join(basedir, </span><span style="color:#9ECBFF;">&quot;.env&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">flask_env_path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.path.join(basedir, </span><span style="color:#9ECBFF;">&quot;.flaskenv&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> os.path.exists(dot_env_path):</span></span>
<span class="line"><span style="color:#E1E4E8;">    load_dotenv(dot_env_path)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> os.path.exists(flask_env_path):</span></span>
<span class="line"><span style="color:#E1E4E8;">    load_dotenv(flask_env_path)</span></span>
<span class="line"><span style="color:#E1E4E8;">root_path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.path.abspath(os.path.dirname(</span><span style="color:#79B8FF;">__file__</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BaseConfig</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SECRET_KEY</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&quot;SECRET_KEY&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;dev key&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># mysql 数据库的配置信息</span></span>
<span class="line"><span style="color:#E1E4E8;">    mysql_host </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&quot;mysql-host&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;127.0.0.1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    mysql_password </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&quot;mysql-password&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;123456&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    mysql_port </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&quot;mysql-port&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3306</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    mysql_user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&quot;mysql-user&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;root&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SQLALCHEMY_DATABASE_URI</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;mysql+pymysql://</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">mysql_user</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">mysql_password</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">@</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">mysql_host</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">mysql_port</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">/数据库名字&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># redis配置</span></span>
<span class="line"><span style="color:#E1E4E8;">    redis_host </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&quot;redis-host&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;127.0.0.1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    redis_port </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&quot;redis-port&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6379</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># redis密码如果有就配置</span></span>
<span class="line"><span style="color:#E1E4E8;">    redis_password </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&quot;redis-password&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">REDIS_HOST</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> redis_host</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">REDIS_PORT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> redis_port</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">REDIS_PASSWORD</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> redis_password</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 配置logging级别</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">LOG_LEVEL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> logging.</span><span style="color:#79B8FF;">DEBUG</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 配置邮箱</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Session保存配置</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SESSION_TYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;redis&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 开启session签名</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SESSION_USE_SIGNER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">True</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 指定 Session 保存的 redis</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SESSION_REDIS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> redis_store.strict_redis</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 设置需要过期</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SESSION_PERMANENT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 设置过期时间</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">PERMANENT_SESSION_LIFETIME</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> datetime.timedelta(</span><span style="color:#FFAB70;">days</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 配置jsonify返回json的编码支持中文</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">JSON_AS_ASCII</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 里面的配置需要根据开发需要进行使用</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DevelopmentConfig</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">BaseConfig</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;开发配置&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestingConfig</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">BaseConfig</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;测试配置&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SQLALCHEMY_DATABASE_URI</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sqlite:///:memory:&quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 内存数据库</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ProductionConfig</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">BaseConfig</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;生成环境配置&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">SQLALCHEMY_TRACK_MODIFICATIONS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">LOG_LEVEL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> logging.</span><span style="color:#79B8FF;">ERROR</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">config </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">: DevelopmentConfig,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;testing&quot;</span><span style="color:#E1E4E8;">: TestingConfig,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">: ProductionConfig,</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename:flask_configs.py</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> datetime</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> logging</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> dotenv </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> load_dotenv</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> quqi.extensions </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> redis_store</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">basedir </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.path.abspath(os.path.dirname(</span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">dot_env_path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.path.join(basedir, </span><span style="color:#032F62;">&quot;.env&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">flask_env_path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.path.join(basedir, </span><span style="color:#032F62;">&quot;.flaskenv&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> os.path.exists(dot_env_path):</span></span>
<span class="line"><span style="color:#24292E;">    load_dotenv(dot_env_path)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> os.path.exists(flask_env_path):</span></span>
<span class="line"><span style="color:#24292E;">    load_dotenv(flask_env_path)</span></span>
<span class="line"><span style="color:#24292E;">root_path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.path.abspath(os.path.dirname(</span><span style="color:#005CC5;">__file__</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BaseConfig</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SECRET_KEY</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&quot;SECRET_KEY&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;dev key&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># mysql 数据库的配置信息</span></span>
<span class="line"><span style="color:#24292E;">    mysql_host </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&quot;mysql-host&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;127.0.0.1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    mysql_password </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&quot;mysql-password&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;123456&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    mysql_port </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&quot;mysql-port&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3306</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    mysql_user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&quot;mysql-user&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;root&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SQLALCHEMY_DATABASE_URI</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;mysql+pymysql://</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">mysql_user</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">mysql_password</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">@</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">mysql_host</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">mysql_port</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">/数据库名字&quot;</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># redis配置</span></span>
<span class="line"><span style="color:#24292E;">    redis_host </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&quot;redis-host&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;127.0.0.1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    redis_port </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&quot;redis-port&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6379</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># redis密码如果有就配置</span></span>
<span class="line"><span style="color:#24292E;">    redis_password </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&quot;redis-password&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">REDIS_HOST</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> redis_host</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">REDIS_PORT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> redis_port</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">REDIS_PASSWORD</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> redis_password</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 配置logging级别</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">LOG_LEVEL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> logging.</span><span style="color:#005CC5;">DEBUG</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 配置邮箱</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Session保存配置</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SESSION_TYPE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;redis&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 开启session签名</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SESSION_USE_SIGNER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 指定 Session 保存的 redis</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SESSION_REDIS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> redis_store.strict_redis</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 设置需要过期</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SESSION_PERMANENT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 设置过期时间</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">PERMANENT_SESSION_LIFETIME</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> datetime.timedelta(</span><span style="color:#E36209;">days</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 配置jsonify返回json的编码支持中文</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">JSON_AS_ASCII</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 里面的配置需要根据开发需要进行使用</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DevelopmentConfig</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseConfig</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;开发配置&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestingConfig</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseConfig</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;测试配置&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SQLALCHEMY_DATABASE_URI</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sqlite:///:memory:&quot;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 内存数据库</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ProductionConfig</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">BaseConfig</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;生成环境配置&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">SQLALCHEMY_TRACK_MODIFICATIONS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">LOG_LEVEL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> logging.</span><span style="color:#005CC5;">ERROR</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">config </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">: DevelopmentConfig,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;testing&quot;</span><span style="color:#24292E;">: TestingConfig,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;production&quot;</span><span style="color:#24292E;">: ProductionConfig,</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><p>在环境的配置中，为不同的使用场景设置了不同的数据库 URL，避免互相干扰。</p><h4 id="从命令行启动项目" tabindex="-1">从命令行启动项目 <a class="header-anchor" href="#从命令行启动项目" aria-label="Permalink to &quot;从命令行启动项目&quot;">​</a></h4><p><strong>注意</strong>：使用 <code>.flaskenv</code> 需要先安装 <code>python-dotenv</code></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">pip install python-dotenv</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">pip install python-dotenv</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>相关命令参考：<a href="https://flask.palletsprojects.com/en/1.1.x/cli/" target="_blank" rel="noreferrer">https://flask.palletsprojects.com/en/1.1.x/cli/</a></p><p>使用 <code>python-dotenv</code> 管理环境变量</p><blockquote><p>从 <code>.env</code> 读取键值对，并将其添加到环境变量。</p></blockquote><p>这个值可以在 <code>.flaskenv</code> 文件中设置，如果没有获取到，则使用默认值 <code>development</code>，对应的配置类即<code> DevelopmentConfig</code>。</p><p>在项目根目录下分别创建两个文件：</p><ul><li><code>.env</code> 存储敏感信息的环境变量，比如用来配置Email服务器的账户名与密码</li><li><code>.flaskenv</code>存储公开环境变量，比如 FLASK_APP。</li></ul><p><code>.flaskenv</code> 文件</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">FLASK_APP=app.py</span></span>
<span class="line"><span style="color:#e1e4e8;">FLASK_ENV=development</span></span>
<span class="line"><span style="color:#e1e4e8;">FLASK_RUN_HOST=&#39;127.0.0.1&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">FLASK_DEBUG=True</span></span>
<span class="line"><span style="color:#e1e4e8;">FLASK_RUN_PORT=5050</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">FLASK_APP=app.py</span></span>
<span class="line"><span style="color:#24292e;">FLASK_ENV=development</span></span>
<span class="line"><span style="color:#24292e;">FLASK_RUN_HOST=&#39;127.0.0.1&#39;</span></span>
<span class="line"><span style="color:#24292e;">FLASK_DEBUG=True</span></span>
<span class="line"><span style="color:#24292e;">FLASK_RUN_PORT=5050</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>FLASK_APP：项目启动的app对象所在的文件（可以是模块、包）</p><p>FLASK_ENV：项目运行的环境，开发者（development）环境会启动调试模式（Debug）</p><p>FLASK_DEBUG=True:相当于FLASK_ENV=development</p><p>FLASK_RUN_HOST：项目运行的ip地址</p><p>FLASK_RUN_PORT：项目运行的端口</p><h4 id="启动程序" tabindex="-1">启动程序 <a class="header-anchor" href="#启动程序" aria-label="Permalink to &quot;启动程序&quot;">​</a></h4><p>当使用 flask run 命令启动程序时，Flask 的自动发现程序实例机制还包含另一种行为：Flask 会自动从环境变量 FLASK_APP 的值定义的模块中寻找名为 create_app() 或 make_app() 的工厂函数，自动调用工厂函数创建程序实例并运行。因为我们已经在. flaskenv 文件中将 FLASK_APP 设为 blog，所以不需要更改任何设置，继续使用 flask run 命令即可运行程序：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ flask run</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ flask run</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你想设置特定的配置名称，最简单的方式是通过环境变量 FLASK_CONFIG 设置。另外，你也可以使用 FLASK_APP 显式地指定工厂函数并传入参数：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">FLASK_APP=&quot;app:create_app(&#39;development&#39;)&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">FLASK_APP=&quot;app:create_app(&#39;development&#39;)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>app：包名</p><p>create_app：方法名</p><h3 id="工厂函数创建程序实例" tabindex="-1">工厂函数创建程序实例 <a class="header-anchor" href="#工厂函数创建程序实例" aria-label="Permalink to &quot;工厂函数创建程序实例&quot;">​</a></h3><p>在 OOP（Object-Oriented Programming，面向对象编程）中，工厂（factory）是指创建其他对象的对象，通常是一个返回其他类的对象的函数或方法。在 playblog 程序的新版本中，程序实例在工厂函数中创建，这个函数返回程序实例 app。按照惯例，这个函数被命名为 create_app() 或 make_app()。我们把这个工厂函数称为程序工厂（Application Factory）——即 “生产程序的工厂”，使用它可以在任何地方创建程序实例。</p><p>工厂函数使得测试和部署更加方便。不必将加载的配置写死在某处，而是直接在不同的地方按照需要的配置创建程序实例。通过⽀持创建多个程序实例，工厂函数提供了很大的灵活性。</p><h4 id="_1-新建项目包" tabindex="-1">1. 新建项目包 <a class="header-anchor" href="#_1-新建项目包" aria-label="Permalink to &quot;1. 新建项目包&quot;">​</a></h4><p>整个项目的内容会比较多，最好是把项目的内容单独放在一个包里面单独处理。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename: app/__init__.py</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> config </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> config</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> extensions </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> db</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> utils </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> setup_log</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> app.extensions </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> register_extensions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">create_app</span><span style="color:#E1E4E8;">(config_name</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Flask(</span><span style="color:#9ECBFF;">&#39;项目名字&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> config_name:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 没有没有传入配置文件，则从本地文件读取</span></span>
<span class="line"><span style="color:#E1E4E8;">        config_name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.getenv(</span><span style="color:#9ECBFF;">&#39;FLASK_CONFIG&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;development&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    setup_log(config_name)</span></span>
<span class="line"><span style="color:#E1E4E8;">    app.config.from_object(config[config_name])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 注册插件</span></span>
<span class="line"><span style="color:#E1E4E8;">    register_extensions(app)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename: app/__init__.py</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> config </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> config</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> extensions </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> db</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> utils </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> setup_log</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> app.extensions </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> register_extensions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_app</span><span style="color:#24292E;">(config_name</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Flask(</span><span style="color:#032F62;">&#39;项目名字&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> config_name:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 没有没有传入配置文件，则从本地文件读取</span></span>
<span class="line"><span style="color:#24292E;">        config_name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.getenv(</span><span style="color:#032F62;">&#39;FLASK_CONFIG&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;development&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    setup_log(config_name)</span></span>
<span class="line"><span style="color:#24292E;">    app.config.from_object(config[config_name])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 注册插件</span></span>
<span class="line"><span style="color:#24292E;">    register_extensions(app)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> app</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>除了扩展初始化操作，还有很多处理函数要注册到程序上，比如错误处理函数、上下文处理函数等。虽然蓝图也可以注册全局的处理函数，但是为了便于管理，除了蓝图特定的处理函数，这些处理函数一般都放到工厂函数中注册。</p><p>为了避免把工厂函数弄得太长太复杂，我们可以根据类别把这些代码分离成多个函数，这些函数接收程序实例 app 作为参数，分别用来为程序实例初始化扩展、注册蓝图、注册错误处理函数、注册上下文处理函数等一系列操作</p><p>工厂函数接收配置名作为参数，返回创建好的程序实例。如果没有传入配置名，我们会从 FLASK_ENV 环境变量获取，如果没有获取到则使用默认值 development。</p><h4 id="_2-通用组件文件夹" tabindex="-1">2. 通用组件文件夹 <a class="header-anchor" href="#_2-通用组件文件夹" aria-label="Permalink to &quot;2. 通用组件文件夹&quot;">​</a></h4><p>在项目中我们会自己写一个通用的方法、类、常量之类的通用内容。当项目变得越来越大时，通用的内容就会越来越多，这些内容可以放在同一个文件下方便管理。</p><p>在项目的根目录下创建一个 <code>common</code> 文件夹，在里面新建一个包<code>utils</code> 然后把 <code>set_logs.py</code> 拖过去。</p><h4 id="初始化扩展" tabindex="-1">初始化扩展 <a class="header-anchor" href="#初始化扩展" aria-label="Permalink to &quot;初始化扩展&quot;">​</a></h4><p>在后面我们会用到数据库之类的第三方拓展，为了方便管理这些拓展，可以将所有的第三方库放在一个文件里面进行导入创建。</p><p>为了方便管理所有的第三方库，我们可以所有的库放在 <code>extensions.py</code> 文件中实例化一个数据库对象 db</p><p>使用数据库的时候，需要安装flask-sqlalchemy拓展数据库的安装，</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">pip install  flask-sqlalchemy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">pip install  flask-sqlalchemy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename: app/extensions/__init__.py</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> .init_db </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> init_db</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">register_extensions</span><span style="color:#E1E4E8;">(app):</span></span>
<span class="line"><span style="color:#E1E4E8;">    init_db(app)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename: app/extensions/__init__.py</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> .init_db </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> init_db</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">register_extensions</span><span style="color:#24292E;">(app):</span></span>
<span class="line"><span style="color:#24292E;">    init_db(app)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename: app/extensions/init_db.py</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask_sqlalchemy </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> SQLAlchemy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">db </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> SQLAlchemy()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">init_db</span><span style="color:#E1E4E8;">(app):</span></span>
<span class="line"><span style="color:#E1E4E8;">    db.init_app(app)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename: app/extensions/init_db.py</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask_sqlalchemy </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> SQLAlchemy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">db </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> SQLAlchemy()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">init_db</span><span style="color:#24292E;">(app):</span></span>
<span class="line"><span style="color:#24292E;">    db.init_app(app)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>大部分扩展都提供了一个 init_app() 方法来⽀持分离扩展的实例化和初始化操作。</p><p>现在我们仍然像往常一样初始化扩展类，但是并不传入程序实例。这时扩展类实例化的工作可以集中放到 extensions.py 脚本中</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename: app/__init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> app.extensions </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> register_extensions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">create_app</span><span style="color:#E1E4E8;">(config_name</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 注册蓝图</span></span>
<span class="line"><span style="color:#E1E4E8;">    register_extensions(app)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename: app/__init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> app.extensions </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> register_extensions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_app</span><span style="color:#24292E;">(config_name</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 注册蓝图</span></span>
<span class="line"><span style="color:#24292E;">    register_extensions(app)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> app</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>由于后面我们还会绑定更多的拓展库，到时候可以使用同样的方法进行注册</p><h3 id="使用蓝图模块化程序" tabindex="-1">使用蓝图模块化程序 <a class="header-anchor" href="#使用蓝图模块化程序" aria-label="Permalink to &quot;使用蓝图模块化程序&quot;">​</a></h3><p>当某一个模块包含太多代码时，常见的做法是将单一模块升级为包， 然后把原模块的内容分离成多个模块。</p><p>接来下来我们学习使用蓝图进行模块划分，在进行模块划分之前，我们先来了解一下蓝图的使用</p><p>Flask 提供的 Blueprint 类就创建一个蓝图实例。像程序实例一 样，我们可以为蓝图实例注册路由、错误处理函数、上下文处理函数，请求处理函数，甚至是单独的静态文件文件夹和模板文件夹。在使用上，它和程序实例也很相似。比如，蓝图实例同样拥有一个 route() 装饰器，可以用来注册路由，但实际上蓝图对象和程序对象却有一些不一样。</p><p>在实例化 Blueprint 类时，除了传入构造函数的第一个参数是蓝图名称之外，创建蓝图实例和使用 Flask 对象创建程序实例的代码基本相同。例如，下面的代码创建了一个 auth 蓝图：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">from flask import Blueprint</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">auth_bp = Blueprint(&#39;auth&#39;, __name__)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">from flask import Blueprint</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">auth_bp = Blueprint(&#39;auth&#39;, __name__)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>使用蓝图不仅仅是对视图函数分类，而是将程序某一部分的所有操作组织在一起。这个蓝图实例以及一系列注册在蓝图实例上的操作的集合被称为一个蓝图。只有当你把它注册到程序上时，它才会把物体相应的部分印刻出来 —— 把蓝图中的操作附加到程序上。</p><p>使用蓝图可以将程序模块化（modular）。一个程序可以注册多个蓝图，我们可以把程序按照功能分离成不同的组件，然后使用蓝图来组织这些组件。蓝图不仅仅是在代码层面上的组织程序，还可以在程序层面上定义属性，具体的形式即为蓝图下的所有路由设置不同的 URL 前缀或子域名。</p><h4 id="_1-创建蓝图" tabindex="-1">1. 创建蓝图 <a class="header-anchor" href="#_1-创建蓝图" aria-label="Permalink to &quot;1. 创建蓝图&quot;">​</a></h4><p>在views包里面管理蓝图</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename: app/views/__init__.py</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> .passport </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> register_passport_bp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">register_blueprint</span><span style="color:#E1E4E8;">(app):</span></span>
<span class="line"><span style="color:#E1E4E8;">    register_passport_bp(app)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename: app/views/__init__.py</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> .passport </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> register_passport_bp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">register_blueprint</span><span style="color:#24292E;">(app):</span></span>
<span class="line"><span style="color:#24292E;">    register_passport_bp(app)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>蓝图一般在⼦包中创建，比如创建一个 blog ⼦包，然后在构造文件中创建蓝图实例，使用包管理蓝图允许你设置蓝图独有的静态文件和模板， 并在蓝图内对各类函数分模块存储。</p><p>蓝图实例 passport_bp 在 <code>__init__.py</code> 脚本顶端创建实例对象</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename: app/views/passport/__init__.py</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Blueprint,Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">passport_bp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Blueprint(</span><span style="color:#9ECBFF;">&#39;passport&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 最后导入视图内容</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> . </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> views</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">register_passport_bp</span><span style="color:#E1E4E8;">(app: Flask):</span></span>
<span class="line"><span style="color:#E1E4E8;">    app.register_blueprint(passport_bp)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename: app/views/passport/__init__.py</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Blueprint,Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">passport_bp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Blueprint(</span><span style="color:#032F62;">&#39;passport&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 最后导入视图内容</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> . </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> views</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">register_passport_bp</span><span style="color:#24292E;">(app: Flask):</span></span>
<span class="line"><span style="color:#24292E;">    app.register_blueprint(passport_bp)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>在上面的代码中，从 Flask 导入 Blueprint 类，实例化这个类就获得了蓝图对象。构造方法中的第一个参数是蓝图的名称；第二个参数是包或模块的名称，可以使用 <code>__name__</code> 变量。Blueprint 类的构造函数还接收其他参数来定义蓝图。</p><p>然后单独创建一个文件写视图函数代码</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename: app/views/passport/view.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> . </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> passport_bp</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@passport_bp.route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;hello flask !&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename: app/views/passport/view.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> . </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> passport_bp</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@passport_bp.route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hello flask !&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>视图函数与蓝图对象分开写的原因是一个项目中可能会存在很多的视图，如果写在一个文件里面，到后期维护会变得非常麻烦。最后还要在 <code>__init__.py</code> 文件中导入一下视图文件，将创建的视图方法挂载到蓝图对象上面。</p><h4 id="_2-注册蓝图" tabindex="-1">2. 注册蓝图 <a class="header-anchor" href="#_2-注册蓝图" aria-label="Permalink to &quot;2. 注册蓝图&quot;">​</a></h4><p>我们在本章开始曾把蓝图比喻成模⼦，为了让这些模⼦发挥作用，我们需要把蓝图注册到程序实例上：</p><p>蓝图使用 Flask.register_blueprint() 方法注册，必须传入的参数是我们在上面创建的蓝图对象。其他的参数可以用来控制蓝图的行为。比如，我们使用 url_prefix 参数为 auth 蓝图下的所有视图 URL 附加一个 URL 前缀；</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> app.views </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> register_blueprint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">register_blueprint(app)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> app.views </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> register_blueprint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">register_blueprint(app)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>最终代码：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># filename: app/__init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> app.views </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> register_blueprint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">create_app</span><span style="color:#E1E4E8;">(config_name</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 注册蓝图</span></span>
<span class="line"><span style="color:#E1E4E8;">    register_blueprint(app)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># filename: app/__init__.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> app.views </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> register_blueprint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create_app</span><span style="color:#24292E;">(config_name</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 注册蓝图</span></span>
<span class="line"><span style="color:#24292E;">    register_blueprint(app)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> app</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="集成日志" tabindex="-1">集成日志 <a class="header-anchor" href="#集成日志" aria-label="Permalink to &quot;集成日志&quot;">​</a></h3><p>在 <code>config.py</code> 文件中在不同的环境的配置下添加日志级别</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 默认日志等级</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">LOG_LEVEL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> logging.</span><span style="color:#79B8FF;">DEBUG</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ProductionConfig</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Config</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;生产模式下的配置&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">LOG_LEVEL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> logging.</span><span style="color:#79B8FF;">ERROR</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">object</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 默认日志等级</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">LOG_LEVEL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> logging.</span><span style="color:#005CC5;">DEBUG</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ProductionConfig</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Config</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;生产模式下的配置&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">LOG_LEVEL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> logging.</span><span style="color:#005CC5;">ERROR</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>在项目录下的 <code>set_logs.py</code> 文件中添加日志配置的相关方法。</p><p>在整个项目中后面还会有大量工具函数或者工具类，可以专门用一个文件放在一起管理。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup_log</span><span style="color:#E1E4E8;">(config_name):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;配置日志&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 设置日志的记录等级</span></span>
<span class="line"><span style="color:#E1E4E8;">    logging.basicConfig(</span><span style="color:#FFAB70;">level</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">config[config_name].</span><span style="color:#79B8FF;">LOG_LEVEL</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># 调试debug级</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 创建日志记录器，指明日志保存的路径、每个日志文件的最大大小、保存的日志文件个数上限</span></span>
<span class="line"><span style="color:#E1E4E8;">    file_log_handler </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RotatingFileHandler(</span><span style="color:#9ECBFF;">&quot;logs/log.log&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">maxBytes</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">backupCount</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 创建日志记录的格式 日志等级 输入日志信息的文件名 行数 日志信息</span></span>
<span class="line"><span style="color:#E1E4E8;">    formatter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> logging.Formatter(</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">%(levelname)s</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%(filename)s</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">%(lineno)d</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%(message)s</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 为刚创建的日志记录器设置日志记录格式</span></span>
<span class="line"><span style="color:#E1E4E8;">    file_log_handler.setFormatter(formatter)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 为全局的日志工具对象（flask app使用的）添加日志记录器</span></span>
<span class="line"><span style="color:#E1E4E8;">    logging.getLogger().addHandler(file_log_handler)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup_log</span><span style="color:#24292E;">(config_name):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;配置日志&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 设置日志的记录等级</span></span>
<span class="line"><span style="color:#24292E;">    logging.basicConfig(</span><span style="color:#E36209;">level</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">config[config_name].</span><span style="color:#005CC5;">LOG_LEVEL</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># 调试debug级</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 创建日志记录器，指明日志保存的路径、每个日志文件的最大大小、保存的日志文件个数上限</span></span>
<span class="line"><span style="color:#24292E;">    file_log_handler </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RotatingFileHandler(</span><span style="color:#032F62;">&quot;logs/log.log&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">maxBytes</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#E36209;">backupCount</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 创建日志记录的格式 日志等级 输入日志信息的文件名 行数 日志信息</span></span>
<span class="line"><span style="color:#24292E;">    formatter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> logging.Formatter(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%(levelname)s</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%(filename)s</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%(lineno)d</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%(message)s</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 为刚创建的日志记录器设置日志记录格式</span></span>
<span class="line"><span style="color:#24292E;">    file_log_handler.setFormatter(formatter)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 为全局的日志工具对象（flask app使用的）添加日志记录器</span></span>
<span class="line"><span style="color:#24292E;">    logging.getLogger().addHandler(file_log_handler)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>在 <code>create_app</code> 方法中调用上一步创建的方法，并传入 <code>config_name</code></p>`,106);function i(n,F,b,u,d,m){return p(),l("div",null,[s("h1",t,[o(e(n.$frontmatter.title)+" ",1),y]),E])}const h=a(r,[["render",i]]);export{g as __pageData,h as default};
