import{o as e,c as t,k as s,a as n,t as a,Q as p}from"./chunks/framework.b6PMUn9J.js";const r=p(`<h1 id="flask模板-jinja2" tabindex="-1">Flask模板（jinja2） <a class="header-anchor" href="#flask模板-jinja2" aria-label="Permalink to &quot;Flask模板（jinja2）&quot;">​</a></h1><p>Flask 使用 text 作为默认模板引擎。你完全可以使用其它模板引擎。但是 不管你使用哪种模板引擎，都必须安装 text 。因为使用 text 可以让 Flask 使用更多依赖于这个模板引擎的扩展。</p><p>本文只是简单介绍如何在 Flask 中使用 text 。如果要详细了解这个模板引 擎的语法，请查阅 <a href="https://jinja.palletsprojects.com/templates/" target="_blank" rel="noreferrer">text</a> 模板官方文档 。</p><h2 id="模板" tabindex="-1">模板 <a class="header-anchor" href="#模板" aria-label="Permalink to &quot;模板&quot;">​</a></h2><h3 id="什么是模板" tabindex="-1">什么是模板 <a class="header-anchor" href="#什么是模板" aria-label="Permalink to &quot;什么是模板&quot;">​</a></h3><p>网站的主页会有一个欢迎用户的标题。虽然目前的应用程序还没有实现用户概念，但这不妨碍我使用一个Python字典来<strong>模拟</strong>一个用户，如下所示：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&#39;username&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;quqi&#39;</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&#39;username&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;quqi&#39;</span><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>创建模拟对象是一项实用的技术，它可以让你专注于应用程序的一部分，而无需为系统中尚不存在的其他部分分心。 在设计应用程序主页的时候，我可不希望因为没有一个用户系统来分散我的注意力，因此我使用了模拟用户对象，来继续接下来的工作。</p><h4 id="模板基本用法" tabindex="-1">模板基本用法 <a class="header-anchor" href="#模板基本用法" aria-label="Permalink to &quot;模板基本用法&quot;">​</a></h4><p>原先的视图函数返回简单的字符串，我现在要将其扩展为包含完整HTML页面元素的字符串，如下所示：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> flask </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Flask(</span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">template_folder</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;templates&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">@app.route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/index&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    user </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&#39;username&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;quqi&#39;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">    &lt;html&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;head&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">            &lt;title&gt;个人主页-</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">user[</span><span style="color:#9ECBFF;">&#39;username&#39;</span><span style="color:#E1E4E8;">]</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&lt;/title&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;/head&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;body&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">            &lt;h1&gt;Hello, </span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">user[</span><span style="color:#9ECBFF;">&#39;username&#39;</span><span style="color:#E1E4E8;">]</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">!&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;/body&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">    &lt;/html&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">    &#39;&#39;&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> flask </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Flask</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Flask(</span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;">, </span><span style="color:#E36209;">template_folder</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;templates&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">@app.route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/index&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    user </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&#39;username&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;quqi&#39;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#032F62;">    &lt;html&gt;</span></span>
<span class="line"><span style="color:#032F62;">        &lt;head&gt;</span></span>
<span class="line"><span style="color:#032F62;">            &lt;title&gt;个人主页-</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">user[</span><span style="color:#032F62;">&#39;username&#39;</span><span style="color:#24292E;">]</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&lt;/title&gt;</span></span>
<span class="line"><span style="color:#032F62;">        &lt;/head&gt;</span></span>
<span class="line"><span style="color:#032F62;">        &lt;body&gt;</span></span>
<span class="line"><span style="color:#032F62;">            &lt;h1&gt;Hello, </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">user[</span><span style="color:#032F62;">&#39;username&#39;</span><span style="color:#24292E;">]</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">!&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#032F62;">        &lt;/body&gt;</span></span>
<span class="line"><span style="color:#032F62;">    &lt;/html&gt;</span></span>
<span class="line"><span style="color:#032F62;">    &#39;&#39;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>利用上述的代码更新这个视图函数，然后再次在浏览器打开它的URL看看结果。</p><p>但是上面的案例有一个很大的缺陷——返回HTML的方式并不友好。如果视图变得非常多，就更加麻烦。</p><h4 id="创建模板" tabindex="-1">创建模板 <a class="header-anchor" href="#创建模板" aria-label="Permalink to &quot;创建模板&quot;">​</a></h4><p>如果我说这个函数返回HTML的方式并不友好的话，你可能会觉得诧异。设想一下，当这个视图函数中的用户和博客不断变化时，里面的代码将会变得多么的复杂。应用的视图函数及其关联的URL也会持续增长。如果哪天我决定更改这个应用的布局，那就不得不更新每个视图函数的HTML字符串。显然，随着应用的扩张，这种方式完全不可行。</p><p>将应用程序的后台逻辑和网页布局划分开来，你不觉得更容易组织管理吗？甚至你可以聘请一位Web设计师来设计一个杀手级的网站前端，而你只需要用Python编写后台应用逻辑。</p><p>模板有助于实现页面展现和业务逻辑之间的分离。 在Flask中，模板被编写为单独的文件，存储在应用程序包内的<strong>templates</strong>文件夹中。 在确定你在<strong>microblog</strong>目录后，创建一个存储模板的目录：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">(venv) $ mkdir templates</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">(venv) $ mkdir templates</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在下面可以看到你的第一个模板，它的功能与上面的<code>index()</code>视图函数返回的HTML页面相似。 把这个文件写在 <strong>app/templates/index.html</strong>中：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;个人主页 - {{ username }}&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;Hello, {{ username }}!&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;个人主页 - {{ username }}&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;Hello, {{ username }}!&lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,20),c=p(`<p>网页渲染转移到HTML模板之后，视图函数就能被简化：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/view1&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">view1</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    username </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;quqi&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> render_template(</span><span style="color:#9ECBFF;">&#39;view1.html&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">username</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">username)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/view1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">view1</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    username </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;quqi&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> render_template(</span><span style="color:#032F62;">&#39;view1.html&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">username</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">username)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>看起来好多了吧？ 赶紧试试这个新版本的应用程序，看看模板是如何工作的。 在浏览器中加载页面后，你需要从浏览器查看 HTML 源代码并将其与原始模板进行比较。</p><p>将模板转换为完整的 HTML 页面的操作称为<strong>渲染</strong>。 为了渲染模板，需要从Flask框架中导入一个名为<code>render_template()</code> 的函数。 该函数需要传入模板文件名和模板参数的变量列表，并返回模板中所有占位符都用实际变量值替换后的字符串结果。</p>`,4),y=s("code",null,"render_template()",-1),E=s("a",{href:"http://jinja.pocoo.org/",target:"_blank",rel:"noreferrer"},"text",-1),i=s("code",null,"render_template()",-1),d=s("h4",{id:"模板的使用",tabindex:"-1"},[n("模板的使用 "),s("a",{class:"header-anchor",href:"#模板的使用","aria-label":'Permalink to "模板的使用"'},"​")],-1),u=s("p",null,"设置 templates 文件夹属性以便能够在代码中有智能提示",-1),b=s("p",null,"设置 html 中的模板语言，以便在 html 有智能提示",-1),m=s("h3",{id:"模板语法",tabindex:"-1"},[n("模板语法 "),s("a",{class:"header-anchor",href:"#模板语法","aria-label":'Permalink to "模板语法"'},"​")],-1),h=s("p",null,"利用 text 这样的模板引擎，我们可以将一部分的程序逻辑放到模板中去。简单地说，我们可以在模板中使用Python语句和表达式来操作数据的输出。但需要注意的是，text并不⽀持所有Python语法。而且出于效率和 代码组织等方面的考虑，我们应该适度使用模板，仅把和输出控制有关的逻辑操作放到模板中。",-1),F=s("p",null,"text允许你在模板中使用大部分Python对象，比如字符串、列表、字典、元组、整型、浮点型、布尔值。它⽀持基本的运算符号（+、-、* 、/等）、比较符号（比如==、！=等）、逻辑符号（and、or、not和括号）以及in、is、None和布尔值（True、False）。",-1),g=s("p",null,"text 的语法和 Python 大致相同，你在后面会陆续接触到一些常见的用法。在模板里，你需要添加特定的定界符将 text 语句和变量标记出来，下面是三种常用的定界符：",-1),v=s("li",null,[s("code",null,"{% ... %}"),n(" 用来标记语句，比如 if 语句，for 语句等。")],-1),C=s("li",null,[s("code",null,"{# ... #}"),n(" 用来写注释。")],-1),A=p(`<p>模板中使用的变量需要在渲染的时候传递进去</p><h4 id="使用变量" tabindex="-1">使用变量 <a class="header-anchor" href="#使用变量" aria-label="Permalink to &quot;使用变量&quot;">​</a></h4><p>代码中传入字符串，列表，字典到模板中</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/args&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">args</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    my_str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    my_int </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">    my_arr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    my_dict </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;正心&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> render_template(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;0103args.html&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">my_str</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">my_str,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">my_int</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">my_int,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">my_arr</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">my_arr,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">my_dict</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">my_dict,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/args&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">args</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    my_str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hello&#39;</span></span>
<span class="line"><span style="color:#24292E;">    my_int </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    my_arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    my_dict </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;正心&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> render_template(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;0103args.html&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">my_str</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">my_str,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">my_int</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">my_int,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">my_arr</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">my_arr,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">my_dict</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">my_dict,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">charset</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;模板变量&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;我的模板变量&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;str：{{ my_str }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;int：{{ my_int }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;arr：{{ my_arr }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;dict：{{ my_dict }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;模板变量&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;我的模板变量&lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;str：{{ my_str }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;int：{{ my_int }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;arr：{{ my_arr }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;dict：{{ my_dict }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;相关运算&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;str + str：{{ my_str + &#39; world !&#39; }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;int + int：{{ my_int + 100}}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;arr[1]：{{ my_arr[1] }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;arr[1:]：{{ my_arr[1:] }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;dict[&#39;name&#39;]：{{ my_dict[&#39;name&#39;] }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;my_dict.items()：{{ my_dict.items() }}&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;相关运算&lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;str + str：{{ my_str + &#39; world !&#39; }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;int + int：{{ my_int + 100}}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;arr[1]：{{ my_arr[1] }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;arr[1:]：{{ my_arr[1:] }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;dict[&#39;name&#39;]：{{ my_dict[&#39;name&#39;] }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;my_dict.items()：{{ my_dict.items() }}&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="条件语句" tabindex="-1">条件语句 <a class="header-anchor" href="#条件语句" aria-label="Permalink to &quot;条件语句&quot;">​</a></h4><p>在渲染过程中使用实际值替换占位符，只是text在模板文件中支持的诸多强大操作之一。 模板也支持在<code>{%...％}</code>块内使用控制语句。 <strong>temp_demo3.html</strong>模板的下一个版本添加了一个条件语句：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">charset</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {% if username %}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;个人主页 - {{ username }}&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {% else %}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;欢迎来到个人主页!&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {% endif %}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;Hello, {{ username }}!&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {% if username %}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;个人主页 - {{ username }}&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {% else %}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;欢迎来到个人主页!&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {% endif %}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;Hello, {{ username }}!&lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>现在，模板变得聪明点儿了，如果视图函数忘记给渲染函数传入一个名为 <code>title</code> 的关键字参数，那么模板将显示一个默认的标题，而不是显示一个空的标题。 你可以通过在视图函数的 <code>render_template()</code> 调用中去除<code>title</code>参数来试试这个条件语句是如何生效的。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/if&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">func_if</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 如果访问时携带用户名显示 个人主页-用户名</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 如果没有携带用户名显示 欢迎来到个人主页</span></span>
<span class="line"><span style="color:#E1E4E8;">    username </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request.args.get(</span><span style="color:#9ECBFF;">&#39;username&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> render_template(</span><span style="color:#9ECBFF;">&#39;0202if.html&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">username</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">username)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/if&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">func_if</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 如果访问时携带用户名显示 个人主页-用户名</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 如果没有携带用户名显示 欢迎来到个人主页</span></span>
<span class="line"><span style="color:#24292E;">    username </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> request.args.get(</span><span style="color:#032F62;">&#39;username&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> render_template(</span><span style="color:#032F62;">&#39;0202if.html&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">username</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">username)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="循环" tabindex="-1">循环 <a class="header-anchor" href="#循环" aria-label="Permalink to &quot;循环&quot;">​</a></h4><p>登录后的用户可能想要在主页上查看其他用户的最新动态，针对这个需求，我现在要做的是丰富这个应用来满足它。</p><p>我将会故技重施，使用模拟对象的把戏来创建一些模拟用户和动态：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.route</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/loop&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loop</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    my_array </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;张三&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;李四&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;王五&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> render_template(</span><span style="color:#9ECBFF;">&#39;view3.html&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">username</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">my_array)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.route</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/loop&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loop</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    my_array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;张三&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;李四&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;王五&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> render_template(</span><span style="color:#032F62;">&#39;view3.html&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">username</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">my_array)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>我使用了一个列表来表示用户。然后将列表的发送给模板进行渲染</p><p>在模板方面，我必须解决一个新问题。 用户动态列表拥有的元素数量由视图函数决定。 那么模板不能对有多少个用户动态进行任何假设，因此需要准备好以通用方式渲染任意数量的用户动态。</p><p>text提供了 <code>for</code> 控制结构来应对这类问题：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">charset</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;循环&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;">&gt;列表取值&lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;我爱吃 {{ arr[0] }}!&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;我爱吃 {{ arr[1] }}!&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;我爱吃 {{ arr[2] }}!&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;">&gt;循环遍历&lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{% for i in arr %}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;我爱吃 {{ i }}!&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{% endfor %}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;循环&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h3</span><span style="color:#24292E;">&gt;列表取值&lt;/</span><span style="color:#22863A;">h3</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;我爱吃 {{ arr[0] }}!&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;我爱吃 {{ arr[1] }}!&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;我爱吃 {{ arr[2] }}!&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h3</span><span style="color:#24292E;">&gt;循环遍历&lt;/</span><span style="color:#22863A;">h3</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{% for i in arr %}</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;我爱吃 {{ i }}!&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{% endfor %}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>大道至简，对吧？ 玩玩这个新版本的应用程序，一定要逐步添加更多的内容到用户列表，看看模板如何调度以展现视图函数传入的所有用户动态。</p><p>在一个 for 循环块中你可以访问这些特殊的变量:</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>loop.index</td><td>当前循环迭代的次数（从 1 开始）</td></tr><tr><td>loop.index0</td><td>当前循环迭代的次数（从 0 开始）</td></tr><tr><td>loop.revindex</td><td>到循环结束需要迭代的次数（从 1 开始）</td></tr><tr><td>loop.revindex0</td><td>到循环结束需要迭代的次数（从 0 开始）</td></tr><tr><td>loop.first</td><td>如果是第一次迭代，为 True 。</td></tr><tr><td>loop.last</td><td>如果是最后一次迭代，为 True 。</td></tr><tr><td>loop.length</td><td>序列中的项目数。</td></tr><tr><td>loop.cycle</td><td>在一串序列间期取值的辅助函数。</td></tr></tbody></table><p>在循环内部,你可以使用一个叫做 loop 的特殊变量来获得关于 for 循环的一些信息</p><p>比如：要是我们想知道当前被迭代的元素序号，并模拟 Python 中的 enumerate 函数做的事情，则可以使用loop 变量的 index 属性,例如:</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;">&gt;循环特殊变量&lt;/</span><span style="color:#85E89D;">h3</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{% for post in arr %}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;{{ loop.index }}, {{ post }}&lt;/</span><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{% endfor %}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h3</span><span style="color:#24292E;">&gt;循环特殊变量&lt;/</span><span style="color:#22863A;">h3</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{% for post in arr %}</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;{{ loop.index }}, {{ post }}&lt;/</span><span style="color:#22863A;">h1</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{% endfor %}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="过滤器" tabindex="-1">过滤器 <a class="header-anchor" href="#过滤器" aria-label="Permalink to &quot;过滤器&quot;">​</a></h3><p>在 text 中，过滤器（filter）是一些可以用来修改和过滤变量值的特殊函数，过滤器和变量用一个竖线（管道符号）隔开，需要参数的过滤器可以像函数一样使用括号传递。</p><p>有时候我们不仅仅只是需要输出变量的值，我们还需要修改变量的显示，甚至格式化、运算等等，而在模板中是不能直接调用 Python 中的某些方法，那么这就用到了过滤器。</p><p>下面是一个对 name 变量使用 title 过滤器的例⼦：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{{ name|title }}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{{ name|title }}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这会将 name 变量的值标题化，相当于在 Python 里调用 name.title()。</p><p><strong>使用方式：</strong></p><p>过滤器的使用方式为：变量名 | 过滤器。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{{variable </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> filter_name(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">args)}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{{variable </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> filter_name(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">args)}}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果没有任何参数传给过滤器,则可以把括号省略掉</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{{variable </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> filter_name}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{{variable </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> filter_name}}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>如：<code>variable</code>，这个过滤器的作用：把变量 variable 的值的首字母转换为大写，其他字母转换为小写</li></ul><h4 id="链式调用" tabindex="-1">链式调用 <a class="header-anchor" href="#链式调用" aria-label="Permalink to &quot;链式调用&quot;">​</a></h4><p>在 text 中，过滤器是可以支持链式调用的，示例如下：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&quot;hello world&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> reverse </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> upper }}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&quot;hello world&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> reverse </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> upper }}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="字符串操作" tabindex="-1">字符串操作 <a class="header-anchor" href="#字符串操作" aria-label="Permalink to &quot;字符串操作&quot;">​</a></h4><p>safe：禁用转义</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;&lt;b&gt;hello&lt;/b&gt;&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> safe }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;&lt;b&gt;hello&lt;/b&gt;&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> safe }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>truncate: 字符串截断</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;hello every one&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> truncate(</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">)}}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;hello every one&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> truncate(</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">)}}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>striptags：渲染之前把值中所有的HTML标签都删掉</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;&lt;em&gt;hello&lt;/em&gt;&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> striptags }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;&lt;em&gt;hello&lt;/em&gt;&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> striptags }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>capitalize：把变量值的首字母转成大写，其余字母转小写</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> capitalize }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> capitalize }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>lower：把值转成小写</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;HELLO&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> lower }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;HELLO&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> lower }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>upper：把值转成大写</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> upper }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> upper }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>title：把值中的每个单词的首字母都转成大写</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> title }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> title }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>reverse：字符串反转</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;olleh&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> reverse }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;olleh&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> reverse }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>format：格式化输出</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> is </span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;">) }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> is </span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">17</span><span style="color:#24292E;">) }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="列表操作" tabindex="-1">列表操作 <a class="header-anchor" href="#列表操作" aria-label="Permalink to &quot;列表操作&quot;">​</a></h4><p>first：取第一个元素</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> first }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> first }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>last：取最后一个元素</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> last }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> last }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>length：获取列表长度</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> length }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> length }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>sum：列表求和</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{{ [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sum</span><span style="color:#E1E4E8;"> }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{{ [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sum</span><span style="color:#24292E;"> }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>sort：列表排序</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;p&gt;{{ [6,2,3,1,5,4] | sort }}&lt;/p&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;p&gt;{{ [6,2,3,1,5,4] | sort }}&lt;/p&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="宏" tabindex="-1">宏 <a class="header-anchor" href="#宏" aria-label="Permalink to &quot;宏&quot;">​</a></h3><p>使用宏之前代码</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">form</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;用户名：&lt;/</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;">/&gt;&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;身份证号：&lt;/</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;idcard&quot;</span><span style="color:#E1E4E8;">/&gt;&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;密码：&lt;/</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;">/&gt;&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;确认密码：&lt;/</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password2&quot;</span><span style="color:#E1E4E8;">/&gt;&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;submit&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;注册&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">form</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">form</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;用户名：&lt;/</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;">/&gt;&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;身份证号：&lt;/</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;idcard&quot;</span><span style="color:#24292E;">/&gt;&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;密码：&lt;/</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;">/&gt;&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;确认密码：&lt;/</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password2&quot;</span><span style="color:#24292E;">/&gt;&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;submit&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;注册&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">form</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>定义宏</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{#定义宏，相当于定义一个函数，在使用的时候直接调用该宏，传入不同的参数就可以了#}</span></span>
<span class="line"><span style="color:#E1E4E8;">{% macro input(label=&quot;&quot;, type=&quot;text&quot;, name=&quot;&quot;, value=&quot;&quot;) %}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;{{ label }}&lt;/</span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{{ type }}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{{ name }}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{{ value }}&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{% endmacro %}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{#定义宏，相当于定义一个函数，在使用的时候直接调用该宏，传入不同的参数就可以了#}</span></span>
<span class="line"><span style="color:#24292E;">{% macro input(label=&quot;&quot;, type=&quot;text&quot;, name=&quot;&quot;, value=&quot;&quot;) %}</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;{{ label }}&lt;/</span><span style="color:#22863A;">label</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">input</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{{ type }}&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{{ name }}&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{{ value }}&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">{% endmacro %}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>使用宏</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">form</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {{ input(&quot;用户名：&quot;, name=&quot;username&quot;) }}&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {{ input(&quot;身份证号：&quot;, name=&quot;idcard&quot;) }}&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {{ input(&quot;密码：&quot;, type=&quot;password&quot;, name=&quot;password&quot;) }}&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {{ input(&quot;确认密码：&quot;, type=&quot;password&quot;, name=&quot;password2&quot;) }}&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {{ input(type=&quot;submit&quot;, value=&quot;注册&quot;) }}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">form</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">form</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {{ input(&quot;用户名：&quot;, name=&quot;username&quot;) }}&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {{ input(&quot;身份证号：&quot;, name=&quot;idcard&quot;) }}&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {{ input(&quot;密码：&quot;, type=&quot;password&quot;, name=&quot;password&quot;) }}&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {{ input(&quot;确认密码：&quot;, type=&quot;password&quot;, name=&quot;password2&quot;) }}&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {{ input(type=&quot;submit&quot;, value=&quot;注册&quot;) }}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">form</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>对宏(macro)的理解：</p><ul><li>1.把它看作 text 中的一个函数，它会返回一个模板或者 HTML 字符串</li><li>2.为了避免反复地编写同样的模板代码，出现代码冗余，可以把他们写成函数以进行重用</li><li>3.需要在多处重复使用的模板代码片段可以写入单独的文件，再包含在所有模板中，以避免重复</li></ul><p>定义宏</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> macro </span><span style="color:#79B8FF;">input</span><span style="color:#E1E4E8;">(name,</span><span style="color:#FFAB70;">value</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;text&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{{</span><span style="color:#9ECBFF;">type</span><span style="color:#79B8FF;">}}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{{</span><span style="color:#9ECBFF;">name</span><span style="color:#79B8FF;">}}</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        value</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{{</span><span style="color:#9ECBFF;">value</span><span style="color:#79B8FF;">}}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class=</span><span style="color:#9ECBFF;">&quot;form-control&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endmacro </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> macro </span><span style="color:#005CC5;">input</span><span style="color:#24292E;">(name,</span><span style="color:#E36209;">value</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;text&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">input</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{{</span><span style="color:#032F62;">type</span><span style="color:#005CC5;">}}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{{</span><span style="color:#032F62;">name</span><span style="color:#005CC5;">}}</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">        value</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{{</span><span style="color:#032F62;">value</span><span style="color:#005CC5;">}}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class=</span><span style="color:#032F62;">&quot;form-control&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endmacro </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>调用宏</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{{ </span><span style="color:#79B8FF;">input</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">， </span><span style="color:#FFAB70;">value</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;zs&#39;</span><span style="color:#E1E4E8;">)}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{{ </span><span style="color:#005CC5;">input</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">， </span><span style="color:#E36209;">value</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;zs&#39;</span><span style="color:#24292E;">)}}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这会输出</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> value</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;zs&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class=</span><span style="color:#9ECBFF;">&quot;form-control&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">input</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> value</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;zs&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class=</span><span style="color:#032F62;">&quot;form-control&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>把宏单独抽取出来，封装成html文件，其它模板中导入使用，文件名可以自定义macro.html</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> macro function(</span><span style="color:#FFAB70;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;text&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">value</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;张三&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">type</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{{</span><span style="color:#9ECBFF;">type</span><span style="color:#79B8FF;">}}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{{</span><span style="color:#9ECBFF;">name</span><span style="color:#79B8FF;">}}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> value</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{{</span><span style="color:#9ECBFF;">value</span><span style="color:#79B8FF;">}}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class=</span><span style="color:#9ECBFF;">&quot;form-control&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endmacro </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> macro function(</span><span style="color:#E36209;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;text&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">value</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;张三&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">input</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">type</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{{</span><span style="color:#032F62;">type</span><span style="color:#005CC5;">}}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{{</span><span style="color:#032F62;">name</span><span style="color:#005CC5;">}}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> value</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{{</span><span style="color:#032F62;">value</span><span style="color:#005CC5;">}}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class=</span><span style="color:#032F62;">&quot;form-control&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endmacro </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在其它模板文件中先导入，再调用</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;macro.html&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> func </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">{{ func.function() }}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;macro.html&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> func </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{{ func.function() }}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="模板的继承" tabindex="-1">模板的继承 <a class="header-anchor" href="#模板的继承" aria-label="Permalink to &quot;模板的继承&quot;">​</a></h3><p>绝大多数Web应用程序在页面的顶部都有一个导航栏，其中带有一些常用的链接，例如编辑配置文件，登录，注销等。我可以轻松地用HTML标记语言将导航栏添加到 <code>index.html</code> 模板上，但随着应用程序的增长，我将需要在其他页面重复同样的工作。尽量不要编写重复的代码，这是一个良好的编程习惯，毕竟我真的不想在诸多HTML模板上保留同样的代码。</p><p>text 有一个模板继承特性，专门解决这个问题。从本质上来讲，就是将所有模板中相同的部分转移到一个基础模板中，然后再从它继承过来。</p><p>所以我现在要做的是定义一个名为 <code>base.html</code> 的基本模板，其中包含一个简单的导航栏，以及我之前实现的标题逻辑。 您需要在模板文件 <em>templates/base.html</em> 中编写代码如下：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#79B8FF;">DOCTYPE</span><span style="color:#E1E4E8;"> html</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">html lang</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">head</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> username </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">title</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">个人主页 </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> {{ username }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">title</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">title</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">欢迎来到个人主页</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">title</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endif </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">head</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">body</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> block content </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endblock </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">body</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">html</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#005CC5;">DOCTYPE</span><span style="color:#24292E;"> html</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">html lang</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">head</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> username </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">title</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">个人主页 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> {{ username }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">title</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">title</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">欢迎来到个人主页</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">title</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endif </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">head</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">body</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> block content </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endblock </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">body</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">html</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>在这个模板中，我使用 <code>block</code> 控制语句来定义派生模板可以插入代码的位置。 <em>block</em> 被赋予一个唯一的名称，派生的模板可以在提供其内容时进行引用。</p><p>通过从基础模板 <em>base.html</em> 继承 HTML 元素，我现在可以简化模板 <em>index.html</em> 了：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> extends </span><span style="color:#9ECBFF;">&quot;base.html&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> block content </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> username </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">h1</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">Hello, {{ i }}!</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">h1</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endfor </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endblock </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> extends </span><span style="color:#032F62;">&quot;base.html&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> block content </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> username </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">h1</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">Hello, {{ i }}!</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">h1</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endfor </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endblock </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>自从基础模板 <em>base.html</em> 接手页面的布局之后，我就可以从 <em>index.html</em> 中删除所有这方面的元素，只留下内容部</p><p>分。 <code>extends</code> 语句用来建立了两个模板之间的继承关系，这样 text 才知道当要求呈现 <code>index.html</code> 时，需要将其嵌入到 <code>base.html</code> 中。 而两个模板中匹配的<code>block</code>语句和其名称 <code>content</code> ，让text知道如何将这两个模板合并成在一起。 现在，扩展应用程序的页面就变得极其方便了，我可以创建从同一个基础模板<em>base.html</em>继承的派生模板，这就是我让应用程序的所有页面拥有统一外观布局而不用重复编写代码的秘诀。</p><p>模板继承是为了重用模板中的公共内容。一般Web开发中，继承主要使用在网站的顶部菜单、底部。这些内容可以定义在父模板中，子模板直接继承，而不需要重复书写。</p><ul><li>标签定义的内容</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> block top </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">} {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endblock </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> block top </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">} {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endblock </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>相当于在父模板中挖个坑，当子模板继承父模板时，可以进行填充。</li><li>子模板使用 extends 指令声明这个模板继承自哪个模板</li><li>父模板中定义的块在子模板中被重新定义，在子模板中调用父模板的内容可以使用 super()</li></ul><h4 id="父模板" tabindex="-1">父模板 <a class="header-anchor" href="#父模板" aria-label="Permalink to &quot;父模板&quot;">​</a></h4><ul><li>base.html</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#FDAEB7;font-style:italic;">!</span><span style="color:#79B8FF;">DOCTYPE</span><span style="color:#E1E4E8;"> html</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">html lang</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">head</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">meta charset</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> title </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">title</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">个人主页 </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> {{ username }}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">title</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">title</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">欢迎来到个人主页</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">title</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endif </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">style</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        div {</span></span>
<span class="line"><span style="color:#E1E4E8;">            border: </span><span style="color:#FDAEB7;font-style:italic;">2px</span><span style="color:#E1E4E8;"> solid;</span></span>
<span class="line"><span style="color:#E1E4E8;">            height: </span><span style="color:#FDAEB7;font-style:italic;">100px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        .nav {</span></span>
<span class="line"><span style="color:#E1E4E8;">            height: </span><span style="color:#FDAEB7;font-style:italic;">40px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        .top {</span></span>
<span class="line"><span style="color:#E1E4E8;">            background</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">color: pink;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        .content {</span></span>
<span class="line"><span style="color:#E1E4E8;">            background</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">color: pink;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        .bottom {</span></span>
<span class="line"><span style="color:#E1E4E8;">            background</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">color: pink;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">style</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">head</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">body</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> block top </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">div </span><span style="color:#F97583;">class=</span><span style="color:#9ECBFF;">&quot;top&quot;</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">base 顶部菜单</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">div</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endblock top </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">br</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> block content </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">dic </span><span style="color:#F97583;">class=</span><span style="color:#9ECBFF;">&quot;content&quot;</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">base 内容部分</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">dic</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endblock content </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">br</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> block bottom </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">div </span><span style="color:#F97583;">class=</span><span style="color:#9ECBFF;">&quot;bottom&quot;</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">base 底部</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">div</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endblock bottom </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">body</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">html</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#B31D28;font-style:italic;">!</span><span style="color:#005CC5;">DOCTYPE</span><span style="color:#24292E;"> html</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">html lang</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">head</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">meta charset</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> title </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">title</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">个人主页 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> {{ username }}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">title</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">title</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">欢迎来到个人主页</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">title</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endif </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">style</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        div {</span></span>
<span class="line"><span style="color:#24292E;">            border: </span><span style="color:#B31D28;font-style:italic;">2px</span><span style="color:#24292E;"> solid;</span></span>
<span class="line"><span style="color:#24292E;">            height: </span><span style="color:#B31D28;font-style:italic;">100px</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        .nav {</span></span>
<span class="line"><span style="color:#24292E;">            height: </span><span style="color:#B31D28;font-style:italic;">40px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        .top {</span></span>
<span class="line"><span style="color:#24292E;">            background</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">color: pink;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        .content {</span></span>
<span class="line"><span style="color:#24292E;">            background</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">color: pink;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        .bottom {</span></span>
<span class="line"><span style="color:#24292E;">            background</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">color: pink;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">style</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">head</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">body</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> block top </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">div </span><span style="color:#D73A49;">class=</span><span style="color:#032F62;">&quot;top&quot;</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">base 顶部菜单</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">div</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endblock top </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">br</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> block content </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">dic </span><span style="color:#D73A49;">class=</span><span style="color:#032F62;">&quot;content&quot;</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">base 内容部分</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">dic</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endblock content </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">br</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> block bottom </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">div </span><span style="color:#D73A49;">class=</span><span style="color:#032F62;">&quot;bottom&quot;</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">base 底部</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">div</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endblock bottom </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">body</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">html</span><span style="color:#D73A49;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h4 id="子模板" tabindex="-1">子模板 <a class="header-anchor" href="#子模板" aria-label="Permalink to &quot;子模板&quot;">​</a></h4><ul><li>extends指令声明这个模板继承自哪</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> extends </span><span style="color:#9ECBFF;">&#39;base.html&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> block content </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> 需要填充的内容</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> endblock content </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> extends </span><span style="color:#032F62;">&#39;base.html&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> block content </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> 需要填充的内容</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> endblock content </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>模板继承使用时注意点： <ul><li>不支持多继承</li><li>为了便于阅读，在子模板中使用 extends 时，尽量写在模板的第一行。</li><li>不能在一个模板文件中定义多个相同名字的 block 标签。</li><li>当在页面中使用多个 block 标签时，建议给结束标签起个名字，当多个 block 嵌套时，阅读性更好。</li></ul></li></ul><h4 id="包含" tabindex="-1">包含 <a class="header-anchor" href="#包含" aria-label="Permalink to &quot;包含&quot;">​</a></h4><p>text 模板中，除了宏和继承，还支持一种代码重用的功能，叫包含(Include)。它的功能是将另一个模板整个加载到当前模板中，并直接渲染。</p><ul><li>templates/header.html 的使用</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> include </span><span style="color:#9ECBFF;">&#39;header.html&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> include </span><span style="color:#032F62;">&#39;header.html&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>文件：header.html</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;div class=&quot;nav&quot;&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    头部部分</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/div&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;div class=&quot;nav&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">    头部部分</span></span>
<span class="line"><span style="color:#24292e;">&lt;/div&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>包含在使用时，如果包含的模板文件不存在时，程序会抛出 <strong>TemplateNotFound</strong> 异常，可以加上 <code>ignore missing</code> 关键字。如果包含的模板文件不存在，会忽略这条include语句。</p><ul><li>include 的使用加上关键字ignore missing</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> include </span><span style="color:#9ECBFF;">&#39;header.html&#39;</span><span style="color:#E1E4E8;"> ignore missing </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> include </span><span style="color:#032F62;">&#39;header.html&#39;</span><span style="color:#24292E;"> ignore missing </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>小结</strong></p><ul><li>宏(Macro)、继承(Block)、包含(include)均能实现代码的复用。</li><li>继承(Block)的本质是代码替换，一般用来实现多个页面中重复不变的区域。</li><li>宏(Macro)的功能类似函数，可以传入参数，需要定义、调用。</li><li>包含(include)是直接将目标模板文件整个渲染出来。</li></ul><p>在模板中，可能会遇到以下情况：</p><ul><li>多个模板具有完全相同的顶部和底部内容</li><li>多个模板中具有相同的模板代码内容，但是内容中部分值不一样</li><li>多个模板中具有完全相同的 html 代码块内容</li></ul><p>像遇到这种情况，可以使用 text 模板中的 宏、继承、包含来进行实现</p><h3 id="静态文件" tabindex="-1">静态文件 <a class="header-anchor" href="#静态文件" aria-label="Permalink to &quot;静态文件&quot;">​</a></h3><p>静态文件（static files）和我们的模板概念相反，指的是内容不需要动态生成的文件。比如图片、CSS 文件和 JavaScript 脚本等。</p><p>python代码</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">@app.route(&#39;/ex_static&#39;)</span></span>
<span class="line"><span style="color:#e1e4e8;">def ex_static():</span></span>
<span class="line"><span style="color:#e1e4e8;">    name = &#39;正心&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">    messages = [</span></span>
<span class="line"><span style="color:#e1e4e8;">        {&#39;title&#39;: &#39;有位非常漂亮的女同事，有天起晚了没有时间化妆便急忙冲到公司。结果那天她被记旷工了……&#39;},</span></span>
<span class="line"><span style="color:#e1e4e8;">        {&#39;title&#39;: &#39;失恋算个啥？轻轻的，你走吧，千万别后悔，因为只要你一挥手，就会发现，已经有那等不及的意中人，正偷偷摸摸拉你的手！&#39;},</span></span>
<span class="line"><span style="color:#e1e4e8;">        {&#39;title&#39;: &#39;世界上最有钱的人是奥特曼，因为所有取款机上都印着他名字的缩写“ATM” 。&#39;},</span></span>
<span class="line"><span style="color:#e1e4e8;">        {&#39;title&#39;: &#39;所谓爱情也不过是：看上了，追求了，好上了，开心了；不久后，腻了，吵了，淡了，散了。&#39;},</span></span>
<span class="line"><span style="color:#e1e4e8;">        {&#39;title&#39;: &#39;据说失眠的同学盯着看十分钟就能睡着了。&#39;},</span></span>
<span class="line"><span style="color:#e1e4e8;">        {&#39;title&#39;: &#39;才知道，朋友就像人民币，有真、也有假，可惜我不是验钞机。&#39;},</span></span>
<span class="line"><span style="color:#e1e4e8;">        {&#39;title&#39;: &#39;回想这几年，尝尽辛酸艰难。从一开始什么都没有到30万，从30万到200万，从200万、300万到现在的1300万！不是炫耀，我只是想通过我自己的经历告诉我的朋友们——手机像素越高，拍的照片越清晰！&#39;},</span></span>
<span class="line"><span style="color:#e1e4e8;">    ]</span></span>
<span class="line"><span style="color:#e1e4e8;">    return render_template(&#39;static.html&#39;, name=name, messages=messages)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">@app.route(&#39;/ex_static&#39;)</span></span>
<span class="line"><span style="color:#24292e;">def ex_static():</span></span>
<span class="line"><span style="color:#24292e;">    name = &#39;正心&#39;</span></span>
<span class="line"><span style="color:#24292e;">    messages = [</span></span>
<span class="line"><span style="color:#24292e;">        {&#39;title&#39;: &#39;有位非常漂亮的女同事，有天起晚了没有时间化妆便急忙冲到公司。结果那天她被记旷工了……&#39;},</span></span>
<span class="line"><span style="color:#24292e;">        {&#39;title&#39;: &#39;失恋算个啥？轻轻的，你走吧，千万别后悔，因为只要你一挥手，就会发现，已经有那等不及的意中人，正偷偷摸摸拉你的手！&#39;},</span></span>
<span class="line"><span style="color:#24292e;">        {&#39;title&#39;: &#39;世界上最有钱的人是奥特曼，因为所有取款机上都印着他名字的缩写“ATM” 。&#39;},</span></span>
<span class="line"><span style="color:#24292e;">        {&#39;title&#39;: &#39;所谓爱情也不过是：看上了，追求了，好上了，开心了；不久后，腻了，吵了，淡了，散了。&#39;},</span></span>
<span class="line"><span style="color:#24292e;">        {&#39;title&#39;: &#39;据说失眠的同学盯着看十分钟就能睡着了。&#39;},</span></span>
<span class="line"><span style="color:#24292e;">        {&#39;title&#39;: &#39;才知道，朋友就像人民币，有真、也有假，可惜我不是验钞机。&#39;},</span></span>
<span class="line"><span style="color:#24292e;">        {&#39;title&#39;: &#39;回想这几年，尝尽辛酸艰难。从一开始什么都没有到30万，从30万到200万，从200万、300万到现在的1300万！不是炫耀，我只是想通过我自己的经历告诉我的朋友们——手机像素越高，拍的照片越清晰！&#39;},</span></span>
<span class="line"><span style="color:#24292e;">    ]</span></span>
<span class="line"><span style="color:#24292e;">    return render_template(&#39;static.html&#39;, name=name, messages=messages)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>html代码</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#85E89D;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">charset</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;Title&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {# 生成静态文件 URL #}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rel</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stylesheet&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">href</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;/static/style.css&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {# 添加图片#}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;user_ico&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;/static/a.jpg&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    正心-语录</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;{{ messages|length }}条留言&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">ul</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;message-list&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {% for msg in messages %}</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;{{ msg[&#39;title&#39;] }}&lt;/</span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    {% endfor %}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">ul</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#22863A;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;Title&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {# 生成静态文件 URL #}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rel</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stylesheet&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">href</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;/static/style.css&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {# 添加图片#}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;user_ico&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;/static/a.jpg&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    正心-语录</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;{{ messages|length }}条留言&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">ul</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;message-list&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {% for msg in messages %}</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">li</span><span style="color:#24292E;">&gt;{{ msg[&#39;title&#39;] }}&lt;/</span><span style="color:#22863A;">li</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    {% endfor %}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">ul</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>static/style.css：定义页面样式</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">margin</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">max-width</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">580</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">font-size</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">14</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">font-family</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">Helvetica</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Arial</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">sans-serif</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">.user_ico</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">width</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">40</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">.message-list</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">list-style-type</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">none</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">padding</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">margin-bottom</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">box-shadow</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rgba</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.16</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">rgba</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.12</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">.message-list</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">padding</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">12</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">border-bottom</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">solid</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">#ddd</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">body</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">max-width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">580</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">font-size</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">14</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">font-family</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">Helvetica</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Arial</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">sans-serif</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.user_ico</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">40</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.message-list</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">list-style-type</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">none</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">padding</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">margin-bottom</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">box-shadow</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">rgba</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.16</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">rgba</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.12</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.message-list</span><span style="color:#24292E;"> </span><span style="color:#22863A;">li</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">padding</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">12</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">border-bottom</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">solid</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">#ddd</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="生成静态文件-url" tabindex="-1">生成静态文件 URL <a class="header-anchor" href="#生成静态文件-url" aria-label="Permalink to &quot;生成静态文件 URL&quot;">​</a></h4><p>在 HTML 文件里，引入这些静态文件需要给出资源所在的 URL。为了更加灵活，这些文件的 URL 可以通过 Flask 提供的 <code>url_for()</code> 函数来生成。</p><p>我们学习过 <code>url_for()</code> 函数的用法，传入端点值（视图函数的名称）和参数，它会返回对应的 URL。对于静态文件，需要传入的端点值是 <code>static</code>，同时使用<code>filename</code> 参数来传入相对于 static 文件夹的文件路径。</p><p><strong>提示</strong> 在 Python 脚本里，<code>url_for()</code> 函数需要从 <code>flask</code> 包中导入，而在模板中则可以直接使用，因为 Flask 把一些常用的函数和对象添加到了模板上下文（环境）里。</p><p><strong>由 url_for 生成静态url</strong></p><p>templates/static.html：引入 CSS 文件</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">link</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rel</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stylesheet&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">href</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{{ url_for(&#39;static&#39;, filename=&#39;style.css&#39;) }}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;text/css&quot;</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">link</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rel</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stylesheet&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">href</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{{ url_for(&#39;static&#39;, filename=&#39;style.css&#39;) }}&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;text/css&quot;</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>最后要为对应的元素设置 <code>class</code> 属性值，以便和对应的 CSS 定义关联起来：</p><p><em>templates/static.html：添加 class 属性</em></p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">alt</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;user_ico&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;user_ico&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;{{ url_for(&#39;static&#39;, filename=&#39;a.jpg&#39;) }}&quot;</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">alt</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;user_ico&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;user_ico&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;{{ url_for(&#39;static&#39;, filename=&#39;a.jpg&#39;) }}&quot;</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>花括号部分的调用会返回 <code>/static/a.jpg</code>。</p><p>最终的页面如下图所示：</p><h4 id="自定义错误页面" tabindex="-1">自定义错误页面 <a class="header-anchor" href="#自定义错误页面" aria-label="Permalink to &quot;自定义错误页面&quot;">​</a></h4><p>当程序返回错误响应时，会渲染一个默认的错误页面。默认的错误页面太简单了，而且和其他页面的风格不符， 导致用户看到这样的页面时往往会不知所措。我们可以自定义错误页面。</p><p>错误处理函数和视图函数很相似，返回值将会作为响应的主体。并在其中为最常见的404和500错误创建了模板文件，表示404 页面的 404.html 模板内容。</p><blockquote><p>404页面模板</p></blockquote><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;html lang=&quot;en&quot;&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">        &lt;title&gt;网页没有被找到&lt;/title&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;h1&gt;页面不见了&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;p&gt;你已经迷失了回家的方向....&lt;/p&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/html&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;html lang=&quot;en&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#24292e;">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">        &lt;title&gt;网页没有被找到&lt;/title&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/head&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;h1&gt;页面不见了&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;p&gt;你已经迷失了回家的方向....&lt;/p&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/html&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>错误处理函数需要附加app.errorhandler()装饰器，并传入错误状态 码作为参数。当发生错误时，对应的错误处理函数会被调用，它的返回值会作为错误响应的主体。代码清单3-13是用来捕捉404错误的错误处理器。</p><blockquote><p>404错误处理器</p></blockquote><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">from flask import Flask, render_template, flash</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">app = Flask(__name__)</span></span>
<span class="line"><span style="color:#e1e4e8;">app.secret_key = &#39;123456&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">@app.errorhandler(404)</span></span>
<span class="line"><span style="color:#e1e4e8;">def error404(e):</span></span>
<span class="line"><span style="color:#e1e4e8;">    flash(&#39;请重新刷新页面试试&#39;)</span></span>
<span class="line"><span style="color:#e1e4e8;">    flash(&#39;刷新也没用？检查一下代码哪里错了&#39;)</span></span>
<span class="line"><span style="color:#e1e4e8;">    flash(&#39;代码没错？重启pycharm试试&#39;)</span></span>
<span class="line"><span style="color:#e1e4e8;">    flash(&#39;重启pycharm没有？重启电脑试试&#39;)</span></span>
<span class="line"><span style="color:#e1e4e8;">    flash(&#39;重启电脑没用？重装系统试试&#39;)</span></span>
<span class="line"><span style="color:#e1e4e8;">    return render_template(&#39;404.html&#39;), 404</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">from flask import Flask, render_template, flash</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">app = Flask(__name__)</span></span>
<span class="line"><span style="color:#24292e;">app.secret_key = &#39;123456&#39;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">@app.errorhandler(404)</span></span>
<span class="line"><span style="color:#24292e;">def error404(e):</span></span>
<span class="line"><span style="color:#24292e;">    flash(&#39;请重新刷新页面试试&#39;)</span></span>
<span class="line"><span style="color:#24292e;">    flash(&#39;刷新也没用？检查一下代码哪里错了&#39;)</span></span>
<span class="line"><span style="color:#24292e;">    flash(&#39;代码没错？重启pycharm试试&#39;)</span></span>
<span class="line"><span style="color:#24292e;">    flash(&#39;重启pycharm没有？重启电脑试试&#39;)</span></span>
<span class="line"><span style="color:#24292e;">    flash(&#39;重启电脑没用？重装系统试试&#39;)</span></span>
<span class="line"><span style="color:#24292e;">    return render_template(&#39;404.html&#39;), 404</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>错误处理函数接收异常对象作为参数，内置的异常对象提供了下列常用属性，如表3-7所示</p><blockquote><p>Werkzeug 内置的 HTTP 异常类的常用属性</p></blockquote><table><thead><tr><th>属 性</th><th>说 明</th></tr></thead><tbody><tr><td><strong>code</strong></td><td>状态码</td></tr><tr><td><strong>name</strong></td><td>原因短语</td></tr><tr><td><strong>description</strong></td><td>错误描述，另外使用 get_description() 方法还可以获取 HTML 格式的错误 描述代码</td></tr></tbody></table><h3 id="自定义过滤器" tabindex="-1">自定义过滤器 <a class="header-anchor" href="#自定义过滤器" aria-label="Permalink to &quot;自定义过滤器&quot;">​</a></h3><p>如果内置的过滤器不能满足你的需要，还可以添加自定义过滤器。使用 app.template_filter（）装饰器可以注册自定义过滤器</p><ul><li>通过Flask应用对象的 <strong>add_template_filter</strong> 方法</li><li>通过装饰器来实现自定义过滤器</li></ul><p><strong>重要：自定义的过滤器名称如果和内置的过滤器重名，会覆盖内置的过滤器。</strong></p><h4 id="需求-添加列表反转的过滤器" tabindex="-1">需求：添加列表反转的过滤器 <a class="header-anchor" href="#需求-添加列表反转的过滤器" aria-label="Permalink to &quot;需求：添加列表反转的过滤器&quot;">​</a></h4><h5 id="方式一" tabindex="-1">方式一 <a class="header-anchor" href="#方式一" aria-label="Permalink to &quot;方式一&quot;">​</a></h5><p>通过调用应用程序实例的 add_template_filter 方法实现自定义过滤器。该方法第一个参数是函数名，第二个参数是自定义的过滤器名称：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.template_filter</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;sort_reverse&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sort_reverse</span><span style="color:#E1E4E8;">(li):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 通过原列表创建一个新列表</span></span>
<span class="line"><span style="color:#E1E4E8;">    temp_li </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">(li)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 将新列表进行返转</span></span>
<span class="line"><span style="color:#E1E4E8;">    temp_li.reverse()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> temp_li</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.template_filter</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;sort_reverse&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sort_reverse</span><span style="color:#24292E;">(li):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 通过原列表创建一个新列表</span></span>
<span class="line"><span style="color:#24292E;">    temp_li </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(li)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 将新列表进行返转</span></span>
<span class="line"><span style="color:#24292E;">    temp_li.reverse()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> temp_li</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="方式二" tabindex="-1">方式二 <a class="header-anchor" href="#方式二" aria-label="Permalink to &quot;方式二&quot;">​</a></h5><p>用装饰器来实现自定义过滤器。装饰器传入的参数是自定义的过滤器名称。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sort_reverse</span><span style="color:#E1E4E8;">(li):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 通过原列表创建一个新列表</span></span>
<span class="line"><span style="color:#E1E4E8;">    temp_li </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">(li)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 将新列表进行返转</span></span>
<span class="line"><span style="color:#E1E4E8;">    temp_li.reverse()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> temp_li</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.add_template_filter(do_listreverse, </span><span style="color:#9ECBFF;">&#39;lireverse&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sort_reverse</span><span style="color:#24292E;">(li):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 通过原列表创建一个新列表</span></span>
<span class="line"><span style="color:#24292E;">    temp_li </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(li)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 将新列表进行返转</span></span>
<span class="line"><span style="color:#24292E;">    temp_li.reverse()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> temp_li</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.add_template_filter(do_listreverse, </span><span style="color:#032F62;">&#39;lireverse&#39;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在 html 中使用该自定义过滤器</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt; my_array 原内容：{{ [3, 4, 2, 1, 7, 9]  }}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">br</span><span style="color:#E1E4E8;">/&gt; my_array 反转：{{ [3, 4, 2, 1, 7, 9]  | sort_reverse }}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt; my_array 原内容：{{ [3, 4, 2, 1, 7, 9]  }}</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">br</span><span style="color:#24292E;">/&gt; my_array 反转：{{ [3, 4, 2, 1, 7, 9]  | sort_reverse }}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>运行结果</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">my_array 原内容：[3, 4, 2, 1, 7, 9] </span></span>
<span class="line"><span style="color:#e1e4e8;">my_array 反转：[9, 7, 1, 2, 4, 3]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">my_array 原内容：[3, 4, 2, 1, 7, 9] </span></span>
<span class="line"><span style="color:#24292e;">my_array 反转：[9, 7, 1, 2, 4, 3]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>附录：</p><p>text常用内置过滤器</p><table><thead><tr><th>过滤器</th><th>说 明</th></tr></thead><tbody><tr><td>default (value, default_value=u&quot;, boolean=False)</td><td>设置默认值，默认值作为参数传入，别名为d</td></tr><tr><td>escape(s)</td><td>转义HTML文本，别名为e</td></tr><tr><td>first (seq)</td><td>返回序列的第一个元素</td></tr><tr><td>last(seq)</td><td>返回序列的最后一个元素</td></tr><tr><td>length(object)</td><td>返回变量的长度</td></tr><tr><td>random(seq)</td><td>返回序列中的随机元素</td></tr><tr><td>safe( value)</td><td>将变量值标记为安全，避免转义</td></tr><tr><td>trim(value)</td><td>清除变量值前后的空格</td></tr><tr><td>max(value, case_sensitive=False, attribute=None)</td><td>返回序列中的最大值</td></tr><tr><td>min(value, case_sensitive=False, attribute=None)</td><td>返回序列中的最小值</td></tr><tr><td>unique(value, case_sensitive=F alse, attribute=None)</td><td>返回序列中的不重复的值</td></tr><tr><td>striptags(value)</td><td>清除变量值内的HTML标签</td></tr><tr><td>urlize (value, trim_url_limit=None, nofbllow=False, target=None, rel=None)</td><td>将URL文本转换为可单击的HTML链接</td></tr><tr><td>wordcount (s)</td><td>计算单词数量</td></tr><tr><td>tojson(value, indent=None)</td><td>将变量值转换为JSON格式</td></tr><tr><td>truncate(s, length=255, killwords=False,end-...&#39;, leeway=None)</td><td>截断字符串，常用于显示文章摘要，length参数设置截断的长度, killwords参数设置是否截断单词，end参数设置结尾的符号</td></tr></tbody></table><p>这里只列出了一部分常用的过滤器，完整的列表请 <a href="http://jinja.pocoo.org/docs/2.10/templates/#builtin-filters" target="_blank" rel="noreferrer">访问</a> 查看。</p><h2 id="jinja-设置" tabindex="-1">Jinja 设置 <a class="header-anchor" href="#jinja-设置" aria-label="Permalink to &quot;Jinja 设置&quot;">​</a></h2><p>在 Flask 中， text 默认配置如下：</p><ul><li><p>当使用 render_template() 时，扩展名为 .html 、 .htm 、 .xml 、 .xhtml 和 .svg 的模 板中开启自动转义。</p></li><li><p>当使用 render_template_string() 时，字符 串开启自动转义。</p></li><li><p>在模板中可以使用 {% autoescape %} 来手动设置是否转义。</p></li><li><p>Flask 在 text 环境中加入一些全局函数和辅助对象，以增强模板的功 能。</p></li></ul><h2 id="标准环境" tabindex="-1">标准环境 <a class="header-anchor" href="#标准环境" aria-label="Permalink to &quot;标准环境&quot;">​</a></h2><p>缺省情况下，以下全局变量可以在 text 模板中使用：</p><ul><li><p>config（ <code>flask.Flask.config</code> ）当前配置对象</p></li><li><p>request 当前请求对象（ <code>flask.request</code> ）。 在没有活动请求环境情况下渲染模板时，这个变量不可用。</p></li><li><p>session 当前会话对象（ <code>flask.session</code> ）。 在没有活动请求环境情况下渲染模板时，这个变量不可用。</p></li><li><p>g 请求绑定的全局变量（ <code>flask.g</code> ）。 在没有活动请求环境情况下渲染模板时，这个变量不可用。</p></li><li><p><code>url_for()</code><code>flask.url_for()</code> 函数。</p></li><li><p><code>get_flashed_messages()</code><code>flask.get_flashed_messages()</code> 函数。</p></li></ul><h3 id="jinja-环境行为" tabindex="-1">Jinja 环境行为 <a class="header-anchor" href="#jinja-环境行为" aria-label="Permalink to &quot;Jinja 环境行为&quot;">​</a></h3><p>这些添加到环境中的变量不是全局变量。与真正的全局变量不同的是这些变 量在已导入的模板的环境中是不可见的。这样做是基于性能的原因，同时也 考虑让代码更有条理。</p><p>那么意义何在？假设你需要导入一个宏，这个宏需要访问请求对象，那么你 有两个选择：</p><ul><li><p>显式地把请求或都该请求有用的属性作为参数传递给宏。</p></li><li><p>导入<code>“ with context ”</code>宏。</p></li></ul><p>导入方式如下：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{% from &#39;_helpers.html&#39; import my_macro with context %}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{% from &#39;_helpers.html&#39; import my_macro with context %}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="控制自动转义" tabindex="-1">控制自动转义 <a class="header-anchor" href="#控制自动转义" aria-label="Permalink to &quot;控制自动转义&quot;">​</a></h2><p>自动转义是指自动对特殊字符进行转义。特殊字符是指 HTML （ 或 XML 和 XHTML ）中的 <code>&amp;</code> 、 <code>&gt;</code> 、 <code>&lt;</code> 、 <code>&quot;</code> 和 <code>&#39;</code> 。因为这些特殊 字符代表了特殊的意思，所以如果要在文本中使用它们就必须把它们替换为 “实体”。如果不转义，那么用户就无法使用这些字符，而且还会带来安全问 题。</p><p>有时候，如需要直接把 HTML 植入页面的时候，可能会需要在模板中关闭自动 转义功能。这个可以直接植入的 HTML 一般来自安全的来源，例如一个把标记 语言转换为 HTML 的转换器。</p><p>有三种方法可以控制自动转义：</p><ul><li><p>1.在 Python 代码中，可以在把 HTML 字符串传递给模板之前，用 Markup 对象封装。一般情况下推荐使用这个方法。</p></li><li><p>2.在模板中，使用 |safe 过滤器显式把一个字符串标记为安全的 HTML （例如： <code>myvariable|safe</code> ）。</p></li><li><p>3.临时关闭整个系统的自动转义。</p></li></ul><p>在模板中关闭自动转义系统可以使用 <code>{% autoescape %}</code> 块：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{% autoescape false %}</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;p&gt;autoescaping is disabled here</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;p&gt;{{ will_not_be_escaped }} </span></span>
<span class="line"><span style="color:#e1e4e8;">{% endautoescape %}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{% autoescape false %}</span></span>
<span class="line"><span style="color:#24292e;">&lt;p&gt;autoescaping is disabled here</span></span>
<span class="line"><span style="color:#24292e;">&lt;p&gt;{{ will_not_be_escaped }} </span></span>
<span class="line"><span style="color:#24292e;">{% endautoescape %}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在这样做的时候，要非常小心块中的变量的安全性。</p><h2 id="注册过滤器" tabindex="-1">注册过滤器 <a class="header-anchor" href="#注册过滤器" aria-label="Permalink to &quot;注册过滤器&quot;">​</a></h2><p>有两种方法可以在 text 中注册你自己的过滤器。要么手动把它们放入应用 的 jinja_env 中，要么使用 <code>template_filter()</code> 装饰器。</p><p>下面两个例子功能相同，都是倒序一个对象:</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.template_filter</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;reverse&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reverse_filter</span><span style="color:#E1E4E8;">(s):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> s[::</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reverse_filter</span><span style="color:#E1E4E8;">(s):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> s[::</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">app.jinja_env.filters[</span><span style="color:#9ECBFF;">&#39;reverse&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> reverse_filter</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.template_filter</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;reverse&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reverse_filter</span><span style="color:#24292E;">(s):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> s[::</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reverse_filter</span><span style="color:#24292E;">(s):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> s[::</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">app.jinja_env.filters[</span><span style="color:#032F62;">&#39;reverse&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> reverse_filter</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>装饰器的参数是可选的，如果不给出就使用函数名作为过滤器名。一旦注册完 成后，你就可以在模板中像 text 的内建过滤器一样使用过滤器了。例如， 假设在环境中你有一个 名为 mylist 的 Pyhton 列表:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{% for x in mylist | reverse %}</span></span>
<span class="line"><span style="color:#e1e4e8;">{% endfor %}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{% for x in mylist | reverse %}</span></span>
<span class="line"><span style="color:#24292e;">{% endfor %}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>环境处理器 环境处理器的作用是把新的变量自动引入模板环境中。环境处理器在模板被渲 染前运行，因此可以把新的变量自动引入模板环境中。它是一个函数，返回值 是一个字典。在应用的所有模板中，这个字典将与模板环境合并:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">@app.context_processor</span></span>
<span class="line"><span style="color:#e1e4e8;">def inject_user():</span></span>
<span class="line"><span style="color:#e1e4e8;">    return dict(user=g.user)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">@app.context_processor</span></span>
<span class="line"><span style="color:#24292e;">def inject_user():</span></span>
<span class="line"><span style="color:#24292e;">    return dict(user=g.user)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上例中的环境处理器创建了一个值为 <code>g.user</code> 的 user 变量，并把这个变 量加入了模板环境中。这个例子只是用于说明工作原理，不是非常有用，因为 在模板中， g 总是存在的。</p><p>传递值不仅仅局限于变量，还可以传递函数（ Python 提供传递函数的功能）:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">@app.context_processor</span></span>
<span class="line"><span style="color:#e1e4e8;">def utility_processor():</span></span>
<span class="line"><span style="color:#e1e4e8;">    def format_price(amount, currency=&quot;€&quot;):</span></span>
<span class="line"><span style="color:#e1e4e8;">        return f&quot;{amount:.2f}{currency}&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    return dict(format_price=format_price)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">@app.context_processor</span></span>
<span class="line"><span style="color:#24292e;">def utility_processor():</span></span>
<span class="line"><span style="color:#24292e;">    def format_price(amount, currency=&quot;€&quot;):</span></span>
<span class="line"><span style="color:#24292e;">        return f&quot;{amount:.2f}{currency}&quot;</span></span>
<span class="line"><span style="color:#24292e;">    return dict(format_price=format_price)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上例中的环境处理器把 <code>format_price</code> 函数传递给了所有模板:</p>`,206),D=s("code",null,"format_price",-1),k=p('<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>jinja2模板虽然很好，但是不要过度依赖，因为前后端不分离，和半分离 不是全栈的发展趋势，而发展趋势是<strong>前后端分离</strong></p><p>然后实际开发中jinja2模板并不是最好的py 全栈模板 最好用的是mako模板，mako模板可以使用python代码这就减轻了不少负担 但是配置到flask应用却很麻烦，所以基本使用jinja2，包括我也喜欢用jinja2 ，习惯了</p><h3 id="全栈趋势-前后端分离" tabindex="-1">全栈趋势：前后端分离 <a class="header-anchor" href="#全栈趋势-前后端分离" aria-label="Permalink to &quot;全栈趋势：前后端分离&quot;">​</a></h3><p>这种方式，开发的效率高，前端后端程序员至少两个，只需要有统一的端口。</p><p>并且前后端分离特别适合使用MVVM框架（vue,react）俗称大前端，拥有更好看的界面， 更高的开发效率。</p><p>前后端分开部署在两个服务器可以让出很多的性能空间，可以有效解决高并发问题</p>',7),w=JSON.parse('{"title":"Flask模板（jinja2）","description":"Flask模板（jinja2）基本使用方法，","frontmatter":{"date":"2023.8.22","title":"Flask模板（jinja2）","tags":["flask","web","python","jinja2"],"description":"Flask模板（jinja2）基本使用方法，","link":"/flask/flask-jinja2.html"},"headers":[],"relativePath":"flask/flask-jinja2.md","filePath":"flask/flask-jinja2.md","lastUpdated":1700227085000}'),q={name:"flask/flask-jinja2.md"},T=Object.assign(q,{setup(B){const l="{{ ... }}",o="{{ format_price(0.33) }}";return(_,f)=>(e(),t("div",null,[r,s("p",null,[n("这个HTML页面看起来非常简单，唯一值得关注的地方是 "),s("code",null,a(l)),n("。"),s("code",null,a(l)),n(" 包含的内容是动态的，只有在运行时才知道具体表示成什么样子。")]),c,s("p",null,[y,n(" 函数调用Flask框架原生依赖的 "),E,n(" 模板引擎。 text 用 "),i,n(" 函数传入的参数中的相应值替换 "),s("code",null,a(l)),n(" 块。")]),d,u,b,m,h,F,g,s("ul",null,[s("li",null,[s("code",null,a(l)),n("用来标记变量。")]),v,C]),A,s("p",null,[s("code",null,a(o)),n(" 你还可以把 "),D,n(" 创建为一个模板过滤器（参见 注册过滤器 ），这里只是演示如何在一个环境处理器中传递 函数。")]),k]))}});export{w as __pageData,T as default};
